{"version":3,"sources":["assets/no-image.png","assets/cover.png","src/app/constants/icons.ts","src/app/constants/colors.ts","src/components/Header.tsx","src/app/services/api.ts","src/app/hooks/useGSL.ts","src/components/SetList/FilterForm/Fields/InputField.tsx","src/components/SetList/FilterForm/Fields/SelectField.tsx","src/components/Overlay.tsx","src/components/SetList/FilterForm/Fields/SearchField.tsx","src/components/SetList/FilterForm/index.tsx","src/components/SetList/FilterBar.tsx","src/components/CardDetails/CardImage.web.tsx","src/components/CardDetails/index.tsx","src/components/SetList/Gallery/GalleryItem.web.tsx","src/components/SetList/Gallery/index.tsx","src/app/navigation/routes/index.web.ts","src/views/SetList.tsx","src/components/Navigation/DrawerNavigation/DrawerContent.tsx","src/components/Navigation/DrawerNavigation/index.tsx","src/components/RequireInternet.tsx","src/components/Wrapper.web.tsx","src/app/utils/isMobileWebBrowser.ts","App.tsx","index.js"],"names":["module","exports","Icons","LightColors","primary","secondary","background","black","white","greyOutline","searchBg","Colors","headerBg","transparent","styles","StyleSheet","create","headerContainer","backgroundColor","flexDirection","toggleDrawerContainer","marginTop","marginHorizontal","toggleDrawerButton","height","headerContentContainer","padding","margin","flex","Header","props","navigation","children","showBackButton","View","style","containerStyle","buttonStyle","type","onPress","goBack","name","color","openDrawer","axios","defaults","baseURL","responseBody","response","data","api","url","config","get","then","useGSL","useSWR","isLoading","goddess_story","setNumbers","set_no","rarities","rarity","series","InputField","label","value","onFocus","onChangeText","listItem","Content","Input","inputField","placeholder","placeholderTextColor","paddingVertical","paddingHorizontal","borderBottomWidth","borderColor","textAlign","SelectField","isExpanded","onSelect","renderItem","useCallback","item","selectListItem","CheckBox","iconType","checkedIcon","uncheckedIcon","checked","Subtitle","Accordion","icon","listItemAccordion","content","formText","selectContainer","selectList","map","paddingLeft","fontSize","Overlay","isVisible","toggleOverlay","showClose","overlayStyle","overlay","fullScreen","onBackdropPress","overlayHeaderContainer","closeOverlayButtonContainer","closeOverlayButton","defaultProps","SearchField","useState","isOverlayVisible","setIsOverlayVisible","searchValue","setSearchValue","theme","useTheme","formattedData","filter","listData","useRef","current","listItemText","lightTheme","searchBarContainer","inputContainerStyle","colors","grey5","toLowerCase","includes","overlayContentContainer","estimatedItemSize","keyExtractor","borderBottomColor","borderTopColor","searchBarInputContainer","formContainer","paddingBottom","formHeader","title","marginLeft","clear","paddingTop","submitButton","FilterForm","onSubmit","expanded","setExpanded","formData","setFormData","handleExpanded","updateFormData","key","size","h3","Pressable","clearData","Code","SetNumber","CardNumber","CharacterName","SeriesName","Rarity","ImageUrl","FilterBar","sort","onFilter","onSort","isBSVisible","setIsBSVisible","toggleBottomSheet","titleContainer","filterButtonContainer","headerButton","sortButtonContainer","fontWeight","marginRight","imageContainer","image","resizeMode","width","imageWebview","borderWidth","CardImage","Image","source","uri","src","container","alignItems","cardContainer","maxWidth","cardTitleContainer","rarityBadge","minWidth","raritytext","cardTitle","cardSubTitle","CardDetails","badgeStyle","textStyle","status","Title","Divider","aspectRatio","shadowColor","setNoBadgeContainer","position","top","left","zIndex","cardNoBadgeContainer","right","badge","badgeText","textContent","cardFooter","GalleryItem","require","Gallery","useWindowDimensions","galleryData","setGalleryData","selectedCard","undefined","galleryColNo","useEffect","cleanFilter","Object","keys","forEach","filteredData","order","a","b","localeCompare","Number","sortData","galleryContainer","numColumns","Routes","component","setFilterData","setSortValue","drawerContentContainer","overflow","drawerContentCoverImage","bottom","DrawerContent","DrawerItem","navigate","Drawer","createDrawerNavigator","DrawerNavigation","NavigationContainer","documentTitle","formatter","Navigator","initialRouteName","screenOptions","headerShown","drawerContent","Screen","justifyContent","RequireInternet","netInfo","useNetInfo","isConnected","console","log","loading","loadingProps","h4","footer","footerText","buttonIcon","Wrapper","mobileBrowserDetected","Platform","OS","navigator","userAgent","test","substr","isMobileWebBrowser","window","open","createTheme","lightColors","mode","components","Icon","App","LogBox","ignoreAllLogs","StatusBar","translucent","registerRootComponent"],"mappings":"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","file":"static/js/app.474e12ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-image.54669752.png\";","module.exports = __webpack_public_path__ + \"static/media/cover.68176387.png\";","export const Icons = {\r\n  arrow_down: 'chevron-down',\r\n  arrow_left: 'chevron-left',\r\n  arrow_right: 'chevron-right',\r\n  menu: 'menu',\r\n  record: 'microphone',\r\n  filter: 'tune',\r\n  list: 'format-list-bulleted',\r\n  home: 'home',\r\n  search: 'magnify',\r\n  close: 'close',\r\n  sort_asc: 'sort-alphabetical-ascending',\r\n  sort_desc: 'sort-alphabetical-descending',\r\n  no_internet: 'access-point-remove',\r\n  download: 'cloud-download-outline',\r\n};\r\n","export const LightColors = {\r\n  primary: '#e85d64',\r\n  secondary: '#f2a4a8',\r\n  background: '#fffdfd',\r\n  black: '#43484d',\r\n  white: '#ffffff',\r\n  greyOutline: '#bfbfbf',\r\n  searchBg: '#393e42',\r\n};\r\nexport const Colors = {\r\n  ...LightColors,\r\n  headerBg: '#393e42',\r\n  transparent: 'transparent',\r\n};\r\n","import React from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\n\r\nimport {Button, Icon} from '@rneui/themed';\r\n\r\nimport {Colors, Icons} from '../app/constants';\r\nimport {NavigationParamList, NavigationProp} from '../app/navigation/types';\r\n\r\ninterface HeaderProps {\r\n  navigation: NavigationProp<keyof NavigationParamList>;\r\n  children?: JSX.Element | JSX.Element[];\r\n  showBackButton?: boolean;\r\n}\r\nconst Header = (props: HeaderProps) => {\r\n  const {navigation, children, showBackButton} = props;\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.headerContainer,\r\n        showBackButton ? {backgroundColor: Colors.transparent} : {},\r\n      ]}\r\n    >\r\n      {showBackButton ? (\r\n        <Button\r\n          containerStyle={styles.toggleDrawerContainer}\r\n          buttonStyle={styles.toggleDrawerButton}\r\n          type=\"clear\"\r\n          onPress={async () => {\r\n            navigation.goBack();\r\n          }}\r\n        >\r\n          <Icon name={Icons.arrow_left} color={Colors.black} />\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          containerStyle={styles.toggleDrawerContainer}\r\n          buttonStyle={styles.toggleDrawerButton}\r\n          type=\"clear\"\r\n          onPress={async () => {\r\n            navigation.openDrawer();\r\n          }}\r\n        >\r\n          <Icon name={Icons.menu} color=\"white\" />\r\n        </Button>\r\n      )}\r\n\r\n      {children && (\r\n        <View style={styles.headerContentContainer}>{props.children}</View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  headerContainer: {\r\n    // paddingTop: 50,\r\n    backgroundColor: Colors.headerBg,\r\n    flexDirection: 'row',\r\n  },\r\n  toggleDrawerContainer: {\r\n    marginTop: 10,\r\n    marginHorizontal: 5,\r\n  },\r\n  toggleDrawerButton: {\r\n    height: 46,\r\n  },\r\n  headerContentContainer: {\r\n    padding: 0,\r\n    margin: 0,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n});\r\nexport default Header;\r\n","import axios, {AxiosRequestConfig, AxiosResponse} from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://arjunverano95.github.io';\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nexport const api = {\r\n  get: (url: string, config?: AxiosRequestConfig) =>\r\n    axios.get(url, config).then(responseBody),\r\n  post: (url: string, body: unknown) =>\r\n    axios.post(url, body).then(responseBody),\r\n  put: (url: string, body: unknown) => axios.put(url, body).then(responseBody),\r\n  delete: (url: string) => axios.delete(url).then(responseBody),\r\n  postForm: (url: string, file: Blob) => {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: {\r\n          'Content-type': 'multipart/form-data',\r\n        },\r\n      })\r\n      .then(responseBody);\r\n  },\r\n};\r\n","import useSWR from 'swr';\r\n\r\nimport {GoddessStory} from '../../models/GoddessStory';\r\nimport {api} from '../services';\r\n\r\nexport const useGSL = () => {\r\n  const {data, isLoading} = useSWR<{\r\n    goddess_story: GoddessStory[];\r\n    set_no: string[];\r\n    rarity: string[];\r\n    series: string[];\r\n  }>('/data/gsl.json', api.get);\r\n\r\n  return {\r\n    isLoading,\r\n    data: data?.goddess_story,\r\n    setNumbers: data?.set_no,\r\n    rarities: data?.rarity,\r\n    series: data?.series,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport {StyleSheet} from 'react-native';\r\n\r\nimport {ListItem} from '@rneui/themed';\r\n\r\nimport {Colors} from '../../../../app/constants';\r\n\r\ninterface InputFieldProps {\r\n  label: string;\r\n  value: string;\r\n  onFocus: () => void;\r\n  onChangeText: (value: string) => void;\r\n}\r\nexport const InputField = (props: InputFieldProps) => {\r\n  const {label, value, onFocus, onChangeText} = props;\r\n  return (\r\n    <ListItem containerStyle={styles.listItem}>\r\n      <ListItem.Content>\r\n        <ListItem.Input\r\n          style={styles.inputField}\r\n          placeholder={label}\r\n          placeholderTextColor={Colors.greyOutline}\r\n          onFocus={onFocus}\r\n          onChangeText={onChangeText}\r\n          value={value}\r\n        />\r\n      </ListItem.Content>\r\n    </ListItem>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  listItem: {\r\n    marginHorizontal: 0,\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 0,\r\n    borderBottomWidth: 1,\r\n    borderColor: Colors.greyOutline,\r\n    height: 50,\r\n  },\r\n  inputField: {\r\n    textAlign: 'left',\r\n    color: Colors.black,\r\n  },\r\n});\r\n","import React, {useCallback} from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\nimport {ScrollView} from 'react-native-gesture-handler';\r\n\r\nimport {Icon, ListItem, Text} from '@rneui/themed';\r\n\r\nimport {Colors, Icons} from '../../../../app/constants';\r\n\r\ninterface SelectFieldProps {\r\n  value: string;\r\n  label: string;\r\n  data: string[];\r\n  isExpanded: boolean;\r\n  onPress: () => void;\r\n  onSelect: (item: string) => void;\r\n}\r\nexport const SelectField = (props: SelectFieldProps) => {\r\n  const {value, label, data, isExpanded, onPress, onSelect} = props;\r\n  const renderItem = useCallback(\r\n    ({item}: {item: string}) => {\r\n      return (\r\n        <ListItem key={item} containerStyle={styles.selectListItem}>\r\n          <ListItem.CheckBox\r\n            // Use ThemeProvider to change the defaults of the checkbox\r\n            iconType=\"material-community\"\r\n            checkedIcon=\"checkbox-marked\"\r\n            uncheckedIcon=\"checkbox-blank-outline\"\r\n            checked={item === value}\r\n            onPress={() => {\r\n              onSelect(item);\r\n            }}\r\n          />\r\n          <ListItem.Content>\r\n            <ListItem.Subtitle>{item}</ListItem.Subtitle>\r\n          </ListItem.Content>\r\n        </ListItem>\r\n      );\r\n    },\r\n    [onSelect],\r\n  );\r\n  const SelectList = () => {\r\n    return <>{data.map((item) => renderItem({item}))}</>;\r\n  };\r\n  return (\r\n    <ListItem.Accordion\r\n      icon={<Icon name={Icons.arrow_down} />}\r\n      containerStyle={[styles.listItem, styles.listItemAccordion]}\r\n      content={\r\n        <ListItem.Content>\r\n          <Text style={[styles.formText, !value ? {} : {color: Colors.black}]}>\r\n            {!value ? label : value}\r\n          </Text>\r\n        </ListItem.Content>\r\n      }\r\n      isExpanded={isExpanded}\r\n      onPress={onPress}\r\n    >\r\n      <View style={styles.selectContainer}>\r\n        <ScrollView style={styles.selectList}>\r\n          <SelectList />\r\n        </ScrollView>\r\n      </View>\r\n    </ListItem.Accordion>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  listItem: {\r\n    marginHorizontal: 0,\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 0,\r\n    borderBottomWidth: 1,\r\n    borderColor: Colors.greyOutline,\r\n    height: 50,\r\n  },\r\n  listItemAccordion: {\r\n    paddingLeft: 10,\r\n    color: Colors.black,\r\n  },\r\n  selectContainer: {\r\n    borderBottomWidth: 1,\r\n    borderColor: Colors.greyOutline,\r\n    height: 200,\r\n  },\r\n  selectList: {\r\n    height: 200,\r\n  },\r\n  selectListItem: {\r\n    paddingVertical: 5,\r\n  },\r\n  formText: {fontSize: 18, color: Colors.greyOutline},\r\n});\r\n","import React from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\n\r\nimport {Button, Icon, Overlay as RNEOverlay} from '@rneui/themed';\r\n\r\nimport {Colors, Icons} from '../app/constants';\r\n\r\ninterface HeaderProps {\r\n  isVisible: boolean;\r\n  toggleOverlay: () => void;\r\n  children: JSX.Element | JSX.Element[];\r\n  showClose?: boolean;\r\n}\r\nconst Overlay = (props: HeaderProps) => {\r\n  const {children, isVisible, toggleOverlay, showClose} = props;\r\n  return (\r\n    <RNEOverlay\r\n      overlayStyle={styles.overlay}\r\n      fullScreen={true}\r\n      isVisible={isVisible}\r\n      onBackdropPress={toggleOverlay}\r\n    >\r\n      {showClose && (\r\n        <View style={styles.overlayHeaderContainer}>\r\n          <Button\r\n            containerStyle={styles.closeOverlayButtonContainer}\r\n            buttonStyle={styles.closeOverlayButton}\r\n            type=\"clear\"\r\n            onPress={() => {\r\n              toggleOverlay();\r\n            }}\r\n          >\r\n            <Icon name={Icons.close} color={Colors.black} />\r\n          </Button>\r\n        </View>\r\n      )}\r\n\r\n      {children && <>{props.children}</>}\r\n    </RNEOverlay>\r\n  );\r\n};\r\nOverlay.defaultProps = {\r\n  showClose: true,\r\n};\r\nconst styles = StyleSheet.create({\r\n  overlay: {padding: 0},\r\n  overlayHeaderContainer: {\r\n    flexDirection: 'row-reverse',\r\n  },\r\n  closeOverlayButtonContainer: {\r\n    marginTop: 10,\r\n    marginHorizontal: 5,\r\n  },\r\n  closeOverlayButton: {\r\n    height: 46,\r\n  },\r\n});\r\n\r\nexport default Overlay;\r\n","import React, {useCallback, useRef, useState} from 'react';\r\nimport {StyleSheet} from 'react-native';\r\nimport {SafeAreaView} from 'react-native-safe-area-context';\r\n\r\nimport {Icon, ListItem, SearchBar, Text, useTheme} from '@rneui/themed';\r\nimport {FlashList} from '@shopify/flash-list';\r\n\r\nimport {Colors, Icons} from '../../../../app/constants';\r\nimport Overlay from '../../../Overlay';\r\n\r\ninterface SearchFieldProps {\r\n  label: string;\r\n  value: string;\r\n  data: string[];\r\n  onPress: () => void;\r\n  onSelect: (item: string) => void;\r\n}\r\nexport const SearchField = (props: SearchFieldProps) => {\r\n  const {label, value, data, onPress, onSelect} = props;\r\n  const [isOverlayVisible, setIsOverlayVisible] = useState(false);\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const {theme} = useTheme();\r\n\r\n  const formattedData = !value\r\n    ? data\r\n    : [value, ...data.filter((item) => item !== value)];\r\n  const listData = useRef(formattedData);\r\n\r\n  const toggleOverlay = () => {\r\n    listData.current = formattedData;\r\n    setSearchValue('');\r\n    setIsOverlayVisible(!isOverlayVisible);\r\n  };\r\n  const handleSearch = (value: string) => {\r\n    if (!value) listData.current = formattedData;\r\n    else\r\n      listData.current = [\r\n        ...data.filter((item) => {\r\n          return `${item}`.toLowerCase().includes(value.toLowerCase());\r\n        }),\r\n      ];\r\n    setSearchValue(value);\r\n  };\r\n  const renderItem = useCallback(\r\n    ({item}: {item: string}) => {\r\n      return (\r\n        <ListItem containerStyle={styles.selectListItem}>\r\n          <ListItem.CheckBox\r\n            // Use ThemeProvider to change the defaults of the checkbox\r\n            iconType=\"material-community\"\r\n            checkedIcon=\"checkbox-marked\"\r\n            uncheckedIcon=\"checkbox-blank-outline\"\r\n            checked={item === value}\r\n            onPress={() => {\r\n              onSelect(item);\r\n              toggleOverlay();\r\n            }}\r\n          />\r\n          <ListItem.Content>\r\n            <ListItem.Subtitle>{item}</ListItem.Subtitle>\r\n          </ListItem.Content>\r\n        </ListItem>\r\n      );\r\n    },\r\n    [toggleOverlay],\r\n  );\r\n  return (\r\n    <>\r\n      <ListItem\r\n        containerStyle={[styles.listItem, styles.listItemText]}\r\n        onPress={() => {\r\n          onPress();\r\n          toggleOverlay();\r\n        }}\r\n      >\r\n        <ListItem.Content>\r\n          <Text style={[styles.formText, !value ? {} : {color: Colors.black}]}>\r\n            {!value ? label : value}\r\n          </Text>\r\n        </ListItem.Content>\r\n        <Icon name={Icons.arrow_right} />\r\n      </ListItem>\r\n      <Overlay isVisible={isOverlayVisible} toggleOverlay={toggleOverlay}>\r\n        <SearchBar\r\n          lightTheme={true}\r\n          containerStyle={styles.searchBarContainer}\r\n          inputContainerStyle={{backgroundColor: theme.colors.grey5}}\r\n          placeholder={label}\r\n          onChangeText={handleSearch}\r\n          value={searchValue}\r\n        />\r\n        <SafeAreaView style={styles.overlayContentContainer}>\r\n          <FlashList\r\n            data={listData.current}\r\n            renderItem={renderItem}\r\n            estimatedItemSize={36}\r\n            keyExtractor={(item) => item}\r\n          />\r\n        </SafeAreaView>\r\n      </Overlay>\r\n    </>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  listItem: {\r\n    marginHorizontal: 0,\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 0,\r\n    borderBottomWidth: 1,\r\n    borderColor: Colors.greyOutline,\r\n    height: 50,\r\n  },\r\n  formText: {fontSize: 18, color: Colors.greyOutline},\r\n  listItemText: {\r\n    paddingLeft: 10,\r\n    color: Colors.black,\r\n  },\r\n\r\n  overlayContentContainer: {\r\n    margin: 10,\r\n    flex: 1,\r\n  },\r\n  searchBarContainer: {\r\n    backgroundColor: Colors.transparent,\r\n    borderBottomColor: Colors.transparent,\r\n    borderTopColor: Colors.transparent,\r\n  },\r\n  searchBarInputContainer: {\r\n    backgroundColor: Colors.transparent,\r\n    borderBottomColor: Colors.transparent,\r\n    borderTopColor: Colors.transparent,\r\n  },\r\n  selectListItem: {\r\n    paddingVertical: 5,\r\n  },\r\n});\r\n","import React, {useState} from 'react';\r\nimport {Pressable, StyleSheet, View} from 'react-native';\r\n\r\nimport {Button, Icon, Text} from '@rneui/themed';\r\n\r\nimport {Colors, Icons} from '../../../app/constants';\r\nimport {useGSL} from '../../../app/hooks/useGSL';\r\nimport {GoddessStory} from '../../../models/GoddessStory';\r\nimport {InputField, SearchField, SelectField} from './Fields';\r\n\r\ninterface FilterFormProps {\r\n  data: GoddessStory;\r\n  onSubmit: (value: GoddessStory) => void;\r\n}\r\nconst FilterForm = (props: FilterFormProps) => {\r\n  const {data, onSubmit} = props;\r\n  const {setNumbers, rarities, series} = useGSL();\r\n  const [expanded, setExpanded] = useState('');\r\n  const [formData, setFormData] = useState<GoddessStory>({...data});\r\n\r\n  const handleExpanded = (value?: string) => {\r\n    if (!value || expanded === value) setExpanded(null);\r\n    else setExpanded(value);\r\n  };\r\n  const updateFormData = (key: string, value: string) => {\r\n    if (formData[key] === value) setFormData({...formData, ...{[key]: ''}});\r\n    else setFormData({...formData, ...{[key]: value}});\r\n  };\r\n  return (\r\n    <>\r\n      <View style={styles.formContainer}>\r\n        <View style={styles.formHeader}>\r\n          <Icon name={Icons.filter} size={45} />\r\n          <Text h3 style={styles.title}>\r\n            {'Filter'}\r\n          </Text>\r\n          <Pressable\r\n            style={styles.clear}\r\n            onPress={() => {\r\n              const clearData: GoddessStory = {\r\n                Code: '',\r\n                SetNumber: '',\r\n                CardNumber: '',\r\n                CharacterName: '',\r\n                SeriesName: '',\r\n                Rarity: '',\r\n                ImageUrl: '',\r\n              };\r\n              setFormData(clearData);\r\n              handleExpanded();\r\n              onSubmit(clearData);\r\n            }}\r\n          >\r\n            <Text>{'Reset'}</Text>\r\n          </Pressable>\r\n        </View>\r\n        <SelectField\r\n          label={'Set'}\r\n          value={formData.SetNumber}\r\n          data={setNumbers}\r\n          isExpanded={expanded === 'SetNumber'}\r\n          onPress={() => {\r\n            handleExpanded('SetNumber');\r\n          }}\r\n          onSelect={(item) => {\r\n            updateFormData('SetNumber', item);\r\n            handleExpanded('SetNumber');\r\n          }}\r\n        />\r\n        <InputField\r\n          label={'Card No.'}\r\n          onFocus={() => {\r\n            handleExpanded();\r\n          }}\r\n          onChangeText={(value) => {\r\n            updateFormData('CardNumber', value);\r\n          }}\r\n          value={formData.CardNumber}\r\n        />\r\n\r\n        <SelectField\r\n          label={'Rarity'}\r\n          value={formData.Rarity}\r\n          data={rarities}\r\n          isExpanded={expanded === 'Rarity'}\r\n          onPress={() => {\r\n            handleExpanded('Rarity');\r\n          }}\r\n          onSelect={(item) => {\r\n            updateFormData('Rarity', item);\r\n            handleExpanded('Rarity');\r\n          }}\r\n        />\r\n        <InputField\r\n          label={'Character'}\r\n          onFocus={() => {\r\n            handleExpanded();\r\n          }}\r\n          onChangeText={(value) => {\r\n            updateFormData('CharacterName', value);\r\n          }}\r\n          value={formData.CharacterName}\r\n        />\r\n        <SearchField\r\n          value={formData.SeriesName}\r\n          label={'Series'}\r\n          data={series}\r\n          onPress={() => {\r\n            handleExpanded();\r\n          }}\r\n          onSelect={(item) => {\r\n            updateFormData('SeriesName', item);\r\n          }}\r\n        />\r\n\r\n        <Button\r\n          containerStyle={styles.submitButton}\r\n          title={'Submit'}\r\n          onPress={() => {\r\n            handleExpanded();\r\n            onSubmit(formData);\r\n          }}\r\n        />\r\n      </View>\r\n    </>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  formContainer: {\r\n    backgroundColor: Colors.background,\r\n    paddingHorizontal: 25,\r\n    paddingBottom: 25,\r\n  },\r\n  formHeader: {flexDirection: 'row', paddingVertical: 25},\r\n  title: {marginLeft: 10, flex: 1},\r\n  clear: {\r\n    paddingTop: 12,\r\n    paddingHorizontal: 10,\r\n  },\r\n  submitButton: {\r\n    marginTop: 20,\r\n  },\r\n});\r\n\r\nexport default FilterForm;\r\n","import React, {useState} from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\n\r\nimport {BottomSheet, Button, Icon, Text} from '@rneui/themed';\r\n\r\nimport {Colors, Icons} from '../../app/constants';\r\nimport {GoddessStory} from '../../models/GoddessStory';\r\nimport FilterForm from './FilterForm';\r\n\r\ninterface FilterBarProps {\r\n  filter: GoddessStory;\r\n  sort: 'asc' | 'desc';\r\n  onFilter: (value: GoddessStory) => void;\r\n  onSort: (value: 'asc' | 'desc') => void;\r\n}\r\n\r\nexport const FilterBar = (props: FilterBarProps) => {\r\n  const {filter, sort, onFilter, onSort} = props;\r\n  const [isBSVisible, setIsBSVisible] = useState(false);\r\n\r\n  const toggleBottomSheet = () => {\r\n    setIsBSVisible(!isBSVisible);\r\n  };\r\n  return (\r\n    <>\r\n      <View style={styles.titleContainer}>\r\n        <Text style={styles.title}>\r\n          {!filter.SetNumber ? 'Goddess Story' : filter.SetNumber}\r\n        </Text>\r\n      </View>\r\n      <Button\r\n        containerStyle={styles.filterButtonContainer}\r\n        buttonStyle={styles.headerButton}\r\n        type=\"clear\"\r\n        onPress={async () => {\r\n          setIsBSVisible(true);\r\n        }}\r\n      >\r\n        <Icon name={Icons.filter} color=\"white\" />\r\n      </Button>\r\n      <Button\r\n        containerStyle={styles.sortButtonContainer}\r\n        buttonStyle={styles.headerButton}\r\n        type=\"clear\"\r\n        onPress={async () => {\r\n          onSort(sort === 'asc' ? 'desc' : 'asc');\r\n        }}\r\n      >\r\n        <Icon\r\n          name={sort === 'asc' ? Icons.sort_asc : Icons.sort_desc}\r\n          color=\"white\"\r\n        />\r\n      </Button>\r\n      <BottomSheet\r\n        onBackdropPress={() => {\r\n          toggleBottomSheet();\r\n        }}\r\n        isVisible={isBSVisible}\r\n      >\r\n        <FilterForm\r\n          data={filter}\r\n          onSubmit={(data) => {\r\n            onFilter(data);\r\n            toggleBottomSheet();\r\n          }}\r\n        />\r\n      </BottomSheet>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  titleContainer: {\r\n    flex: 1,\r\n    paddingLeft: 10,\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginTop: 19,\r\n    color: Colors.white,\r\n  },\r\n  filterButtonContainer: {\r\n    marginTop: 10,\r\n  },\r\n  sortButtonContainer: {\r\n    marginTop: 10,\r\n    marginRight: 8,\r\n  },\r\n  headerButton: {\r\n    height: 46,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport {Image, StyleSheet, View} from 'react-native';\r\n\r\nimport {Colors} from '../../app/constants';\r\nimport {GoddessStory} from '../../models/GoddessStory';\r\n\r\ninterface CardImageProps {\r\n  data: GoddessStory;\r\n}\r\n\r\nconst CardImage = (props: CardImageProps) => {\r\n  const {data} = props;\r\n\r\n  if (data.ImageUrl)\r\n    return (\r\n      <View style={styles.imageContainer}>\r\n        <Image\r\n          style={styles.image}\r\n          source={{\r\n            uri: data.ImageUrl,\r\n          }}\r\n          resizeMode={'contain'}\r\n        />\r\n      </View>\r\n    );\r\n  else\r\n    return (\r\n      <>\r\n        <iframe\r\n          style={styles.imageWebview}\r\n          src={`https://images.google.com/images?q=${data.SeriesName} ${data.CharacterName}`}\r\n        />\r\n      </>\r\n    );\r\n};\r\nconst styles = StyleSheet.create({\r\n  imageContainer: {\r\n    flex: 1,\r\n    margin: 15,\r\n    backgroundColor: Colors.white,\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    height: null,\r\n    resizeMode: 'contain',\r\n    width: null,\r\n  },\r\n  imageWebview: {\r\n    flex: 1,\r\n    margin: 20,\r\n    backgroundColor: Colors.white,\r\n    borderWidth: 0,\r\n  },\r\n});\r\nexport default CardImage;\r\n","import React from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\n\r\nimport {Badge, Card, Text} from '@rneui/themed';\r\n\r\nimport {Colors} from '../../app/constants';\r\nimport {GoddessStory} from '../../models/GoddessStory';\r\nimport CardImage from './CardImage';\r\n\r\ninterface CardDetailsProps {\r\n  data: GoddessStory;\r\n}\r\n\r\nconst CardDetails = (props: CardDetailsProps) => {\r\n  const {data} = props;\r\n\r\n  if (!data) return <></>;\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.container}>\r\n        <Card containerStyle={styles.cardContainer}>\r\n          <View style={styles.cardTitleContainer}>\r\n            <Badge\r\n              badgeStyle={styles.rarityBadge}\r\n              textStyle={styles.raritytext}\r\n              value={data.Rarity}\r\n              status=\"warning\"\r\n            />\r\n            <Card.Title\r\n              style={styles.cardTitle}\r\n            >{`${data.CharacterName}`}</Card.Title>\r\n            <Card.Title style={styles.cardSubTitle}>\r\n              {data.SetNumber}\r\n            </Card.Title>\r\n          </View>\r\n          <Card.Divider />\r\n          <View>\r\n            <Text>{`Series: ${data.SeriesName}`}</Text>\r\n            <Text>{`ID: ${data.SetNumber}-${data.CardNumber}`}</Text>\r\n            {/* <Text>{`Character Name: ${data.CharacterName}`}</Text> */}\r\n            {/* <Text>{`Rarity: ${data.Rarity}`}</Text> */}\r\n          </View>\r\n        </Card>\r\n      </View>\r\n      <CardImage data={data} />\r\n    </>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {alignItems: 'center', paddingHorizontal: 10},\r\n  cardContainer: {\r\n    borderWidth: 0,\r\n    backgroundColor: Colors.white,\r\n    marginTop: 10,\r\n    width: '100%',\r\n    maxWidth: 576,\r\n  },\r\n  cardTitleContainer: {flexDirection: 'row'},\r\n  rarityBadge: {\r\n    height: 22,\r\n    minWidth: 45,\r\n    paddingHorizontal: 5,\r\n    marginRight: 5,\r\n  },\r\n  raritytext: {fontWeight: 'bold'}, // alignSelf: 'flex-start'}\r\n  cardTitle: {flex: 1, textAlign: 'left'},\r\n  cardSubTitle: {fontWeight: 'normal'},\r\n});\r\nexport default CardDetails;\r\n","import React from 'react';\r\nimport {Image, Pressable, StyleSheet, View} from 'react-native';\r\n\r\nimport {Badge, Card, Text} from '@rneui/themed';\r\n\r\nimport {Colors} from '../../../app/constants';\r\nimport {GoddessStory} from '../../../models/GoddessStory';\r\n\r\ninterface GalleryItemProps {\r\n  data: GoddessStory;\r\n  onPress: (value: GoddessStory) => void;\r\n}\r\nconst GalleryItem = (props: GalleryItemProps) => {\r\n  const {data, onPress} = props;\r\n  return (\r\n    <Card containerStyle={styles.cardContainer}>\r\n      <Pressable\r\n        onPress={() => {\r\n          onPress(data);\r\n        }}\r\n      >\r\n        <View>\r\n          <Badge\r\n            containerStyle={styles.setNoBadgeContainer}\r\n            badgeStyle={styles.badge}\r\n            textStyle={styles.badgeText}\r\n            value={data.SetNumber}\r\n            status=\"warning\"\r\n          />\r\n          <Badge\r\n            containerStyle={styles.cardNoBadgeContainer}\r\n            badgeStyle={styles.badge}\r\n            textStyle={styles.badgeText}\r\n            value={data.CardNumber}\r\n            status=\"success\"\r\n          />\r\n          <Image\r\n            style={styles.image}\r\n            source={\r\n              !data.ImageUrl\r\n                ? require('../../../../assets/no-image.png')\r\n                : {\r\n                    uri: data.ImageUrl,\r\n                  }\r\n            }\r\n            resizeMode={'cover'}\r\n          />\r\n        </View>\r\n        <View style={styles.cardFooter}>\r\n          <View style={styles.cardTitleContainer}>\r\n            <Text style={styles.cardTitle}>{`${data.CharacterName}`}</Text>\r\n            <Text style={styles.cardSubTitle}>{data.Rarity}</Text>\r\n          </View>\r\n          <View>\r\n            <Text style={styles.textContent}>{data.SeriesName}</Text>\r\n          </View>\r\n        </View>\r\n      </Pressable>\r\n    </Card>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    aspectRatio: 1,\r\n    width: '100%',\r\n    flex: 1,\r\n  },\r\n  cardContainer: {\r\n    borderWidth: 0,\r\n    shadowColor: Colors.transparent,\r\n    // maxWidth: '50%',\r\n    flex: 1,\r\n    margin: 0,\r\n    paddingHorizontal: 5,\r\n    paddingTop: 10,\r\n    paddingBottom: 0,\r\n  },\r\n  cardTitleContainer: {flexDirection: 'row'},\r\n  setNoBadgeContainer: {\r\n    position: 'absolute',\r\n    top: 5,\r\n    left: 10,\r\n    zIndex: 999,\r\n  },\r\n  cardNoBadgeContainer: {\r\n    position: 'absolute',\r\n    top: 5,\r\n    right: 5,\r\n    zIndex: 999,\r\n  },\r\n  badge: {\r\n    height: 20,\r\n    minWidth: 40,\r\n    paddingHorizontal: 1,\r\n    marginRight: 5,\r\n    fontSize: 9,\r\n  },\r\n  badgeText: {fontWeight: 'bold'}, // alignSelf: 'flex-start'}\r\n  cardTitle: {flex: 1, textAlign: 'left', fontSize: 12},\r\n  cardSubTitle: {textAlign: 'right', fontSize: 12, fontWeight: 'bold'},\r\n  textContent: {fontSize: 11, color: Colors.greyOutline},\r\n  cardFooter: {paddingHorizontal: 8, paddingVertical: 3},\r\n});\r\nexport default GalleryItem;\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport {StyleSheet, useWindowDimensions} from 'react-native';\r\nimport {SafeAreaView} from 'react-native-safe-area-context';\r\n\r\nimport {FlashList} from '@shopify/flash-list';\r\n\r\nimport {Colors} from '../../../app/constants';\r\nimport {useGSL} from '../../../app/hooks/useGSL';\r\nimport {GoddessStory} from '../../../models/GoddessStory';\r\nimport CardDetails from '../../CardDetails';\r\nimport Overlay from '../../Overlay';\r\nimport GalleryItem from './GalleryItem';\r\n\r\ninterface GalleryProps {\r\n  filter: GoddessStory;\r\n  sort: 'asc' | 'desc';\r\n}\r\n\r\nexport const Gallery = (props: GalleryProps) => {\r\n  const {data} = useGSL();\r\n  const {width} = useWindowDimensions();\r\n  const {filter, sort} = props;\r\n  const [galleryData, setGalleryData] = useState<GoddessStory[]>([]);\r\n  const [isOverlayVisible, setIsOverlayVisible] = useState(false);\r\n  const selectedCard = useRef<GoddessStory>(undefined);\r\n  let galleryColNo = 2;\r\n\r\n  if (width < 576) {\r\n    galleryColNo = 2;\r\n  } else if (width >= 576 && width < 768) {\r\n    galleryColNo = 3;\r\n  } else if (width >= 768 && width < 992) {\r\n    galleryColNo = 5;\r\n  } else {\r\n    galleryColNo = 6;\r\n  }\r\n\r\n  const toggleOverlay = () => {\r\n    setIsOverlayVisible(!isOverlayVisible);\r\n  };\r\n  useEffect(() => {\r\n    if (data) {\r\n      const cleanFilter = {...filter};\r\n      Object.keys(cleanFilter).forEach((key) => {\r\n        if (!cleanFilter[key]) {\r\n          delete cleanFilter[key];\r\n        }\r\n      });\r\n      const sortData = (data: GoddessStory[], order: 'asc' | 'desc') => {\r\n        if (order === 'asc') {\r\n          return data.sort(\r\n            (a, b) =>\r\n              a.SetNumber.localeCompare(b.SetNumber) ||\r\n              b.Rarity.localeCompare(a.Rarity) ||\r\n              Number(a.CardNumber) - Number(b.CardNumber),\r\n          );\r\n        } else {\r\n          return data.sort(\r\n            (a, b) =>\r\n              a.SetNumber.localeCompare(b.SetNumber) ||\r\n              b.Rarity.localeCompare(a.Rarity) ||\r\n              Number(b.CardNumber) - Number(a.CardNumber),\r\n          );\r\n        }\r\n      };\r\n\r\n      const filteredData = data.filter((item) => {\r\n        for (const key in cleanFilter) {\r\n          if (cleanFilter[key]) {\r\n            if (key === 'CharacterName') {\r\n              if (\r\n                !item[key]\r\n                  .toLowerCase()\r\n                  .includes(cleanFilter[key].toLowerCase())\r\n              )\r\n                return false;\r\n            } else if (item[key] != cleanFilter[key]) return false;\r\n          }\r\n        }\r\n        return true;\r\n      });\r\n      setGalleryData(sortData(filteredData, sort));\r\n    }\r\n  }, [data, filter, sort]);\r\n  return (\r\n    <>\r\n      <SafeAreaView style={styles.galleryContainer}>\r\n        <FlashList\r\n          data={galleryData}\r\n          numColumns={galleryColNo}\r\n          keyExtractor={(item) => item.Code}\r\n          estimatedItemSize={248}\r\n          renderItem={({item}) => (\r\n            <GalleryItem\r\n              data={item}\r\n              onPress={(item) => {\r\n                selectedCard.current = item;\r\n                toggleOverlay();\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </SafeAreaView>\r\n      <Overlay isVisible={isOverlayVisible} toggleOverlay={toggleOverlay}>\r\n        {selectedCard && <CardDetails data={selectedCard.current} />}\r\n      </Overlay>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  galleryContainer: {\r\n    flex: 1,\r\n    paddingBottom: 10,\r\n    backgroundColor: Colors.background,\r\n  },\r\n});\r\n","import SetList from '../../../views/SetList';\r\nimport {Icons} from '../../constants';\r\nimport {NavigationParamList, ScreenProps} from '../types';\r\n\r\ninterface Routes {\r\n  name: keyof NavigationParamList;\r\n  label: string;\r\n  icon: string;\r\n  component: (props: ScreenProps<keyof NavigationParamList>) => JSX.Element;\r\n}\r\n\r\nconst Routes: Routes[] = [\r\n  {\r\n    name: 'SetList',\r\n    label: 'Goddess Story',\r\n    icon: Icons.home,\r\n    component: SetList,\r\n  },\r\n];\r\nexport const initialRoute: keyof NavigationParamList = 'SetList';\r\nexport default Routes;\r\n","import React, {useState} from 'react';\r\n\r\nimport {ScreenProps} from '../app/navigation/types';\r\nimport Header from '../components/Header';\r\nimport {FilterBar, Gallery} from '../components/SetList';\r\nimport {GoddessStory} from '../models/GoddessStory';\r\n\r\nconst SetList = (props: ScreenProps<'SetList'>) => {\r\n  const {navigation} = props;\r\n\r\n  const [filter, setFilterData] = useState<GoddessStory>({\r\n    Code: '',\r\n    SetNumber: '',\r\n    CardNumber: '',\r\n    CharacterName: '',\r\n    SeriesName: '',\r\n    Rarity: '',\r\n    ImageUrl: '',\r\n  });\r\n  const [sort, setSortValue] = useState<'asc' | 'desc'>('asc');\r\n  const onFilter = (value: GoddessStory) => {\r\n    setFilterData(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header navigation={navigation}>\r\n        <FilterBar\r\n          sort={sort}\r\n          filter={filter}\r\n          onFilter={onFilter}\r\n          onSort={(value) => {\r\n            setSortValue(value);\r\n          }}\r\n        />\r\n      </Header>\r\n\r\n      <Gallery filter={filter} sort={sort} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SetList;\r\n","import React from 'react';\r\nimport {Image, StyleSheet, View} from 'react-native';\r\n\r\nimport {\r\n  DrawerContentComponentProps,\r\n  DrawerItem,\r\n} from '@react-navigation/drawer';\r\nimport {Icon} from '@rneui/themed';\r\n\r\nimport Routes from '../../../app/navigation/routes';\r\n\r\nconst DrawerContent = (props: DrawerContentComponentProps) => {\r\n  const {navigation} = props;\r\n  return (\r\n    <>\r\n      <View style={styles.drawerContentContainer}>\r\n        <Image\r\n          style={styles.drawerContentCoverImage}\r\n          source={require('../../../../assets/cover.png')}\r\n        />\r\n      </View>\r\n      {Routes.map((item) => (\r\n        <DrawerItem\r\n          key={item.name}\r\n          icon={() => <Icon name={item.icon} />}\r\n          label={item.label}\r\n          onPress={() => {\r\n            navigation.navigate(item.name);\r\n          }}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  drawerContentContainer: {\r\n    height: 200,\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n  },\r\n  drawerContentCoverImage: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    height: 250,\r\n    width: '100%',\r\n  },\r\n});\r\nexport default DrawerContent;\r\n","import React from 'react';\r\n\r\nimport {createDrawerNavigator} from '@react-navigation/drawer';\r\nimport {NavigationContainer} from '@react-navigation/native';\r\n\r\nimport Routes, {initialRoute} from '../../../app/navigation/routes';\r\nimport {NavigationParamList} from '../../../app/navigation/types';\r\nimport DrawerContent from './DrawerContent';\r\n\r\nconst Drawer = createDrawerNavigator<NavigationParamList>();\r\n\r\nexport const DrawerNavigation = () => {\r\n  return (\r\n    <NavigationContainer\r\n      documentTitle={{\r\n        formatter: () => `Goddess Story Library`,\r\n      }}\r\n    >\r\n      <Drawer.Navigator\r\n        initialRouteName={initialRoute}\r\n        screenOptions={{\r\n          headerShown: false,\r\n        }}\r\n        drawerContent={(props) => <DrawerContent {...props} />}\r\n      >\r\n        {Routes.map((item) => (\r\n          <Drawer.Screen\r\n            key={item.name}\r\n            name={item.name}\r\n            component={item.component}\r\n          />\r\n        ))}\r\n      </Drawer.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\n\r\nimport {useNetInfo} from '@react-native-community/netinfo';\r\nimport {Button, Icon, Text} from '@rneui/themed';\r\n\r\nimport {Colors, Icons} from '../app/constants';\r\nimport {useGSL} from '../app/hooks/useGSL';\r\nimport Overlay from './Overlay';\r\n\r\nconst RequireInternet = () => {\r\n  const netInfo = useNetInfo();\r\n  const {isLoading} = useGSL();\r\n\r\n  // return (\r\n  //   <View style={styles.skeletonContainer}>\r\n  //     <View style={styles.skeletonHeader}>\r\n  //       {boxSize.width > 0 && (\r\n  //         <Skeleton style={styles.skeleton} height={60} />\r\n  //       )}\r\n  //     </View>\r\n\r\n  //     <View\r\n  //       style={styles.skeletonContent}\r\n  //       onLayout={(event) => {\r\n  //         const {width, height} = event.nativeEvent.layout;\r\n  //         setBoxSize({width: (width - 15) / 2, height: (height - 30) / 3});\r\n  //       }}\r\n  //     >\r\n  //       <View style={styles.skeletonContentRow}>\r\n  //         <View\r\n  //           style={{\r\n  //             width: boxSize.width,\r\n  //             height: boxSize.height,\r\n  //           }}\r\n  //         >\r\n  //           <Skeleton style={styles.skeleton} height={boxSize.height - 40} />\r\n  //           <Skeleton style={styles.skeletonSmall} height={30} />\r\n  //         </View>\r\n  //         <View\r\n  //           style={{\r\n  //             width: boxSize.width,\r\n  //             height: boxSize.height,\r\n  //           }}\r\n  //         >\r\n  //           <Skeleton style={styles.skeleton} height={boxSize.height - 40} />\r\n  //           <Skeleton style={styles.skeletonSmall} height={30} />\r\n  //         </View>\r\n  //       </View>\r\n  //       <View style={styles.skeletonContentRow}>\r\n  //         <View\r\n  //           style={{\r\n  //             width: boxSize.width,\r\n  //             height: boxSize.height,\r\n  //           }}\r\n  //         >\r\n  //           <Skeleton style={styles.skeleton} height={boxSize.height - 40} />\r\n  //           <Skeleton style={styles.skeletonSmall} height={30} />\r\n  //         </View>\r\n  //         <View\r\n  //           style={{\r\n  //             width: boxSize.width,\r\n  //             height: boxSize.height,\r\n  //           }}\r\n  //         >\r\n  //           <Skeleton style={styles.skeleton} height={boxSize.height - 40} />\r\n  //           <Skeleton style={styles.skeletonSmall} height={30} />\r\n  //         </View>\r\n  //       </View>\r\n  //       <View style={styles.skeletonContentRow}>\r\n  //         <View\r\n  //           style={{\r\n  //             width: boxSize.width,\r\n  //             height: boxSize.height,\r\n  //           }}\r\n  //         >\r\n  //           <Skeleton style={styles.skeleton} height={boxSize.height - 40} />\r\n  //           <Skeleton style={styles.skeletonSmall} height={30} />\r\n  //         </View>\r\n  //         <View\r\n  //           style={{\r\n  //             width: boxSize.width,\r\n  //             height: boxSize.height,\r\n  //           }}\r\n  //         >\r\n  //           <Skeleton style={styles.skeleton} height={boxSize.height - 40} />\r\n  //           <Skeleton style={styles.skeletonSmall} height={30} />\r\n  //         </View>\r\n  //       </View>\r\n  //     </View>\r\n  //   </View>\r\n  // );\r\n\r\n  return (\r\n    <>\r\n      <Overlay\r\n        showClose={false}\r\n        isVisible={isLoading || !netInfo.isConnected}\r\n        toggleOverlay={() => {\r\n          console.log('toggleOverlay');\r\n        }}\r\n      >\r\n        <View style={styles.container}>\r\n          {isLoading ? (\r\n            <Button type=\"clear\" loading loadingProps={{size: 25}} />\r\n          ) : (\r\n            <>\r\n              <Icon name={Icons.no_internet} size={50} />\r\n              <Text h4>{'Conection Error'}</Text>\r\n              <Text>{'Please check your network connectivity'}</Text>\r\n              <Text>{'and try again.'}</Text>\r\n            </>\r\n          )}\r\n        </View>\r\n      </Overlay>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: Colors.background,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  //   skeletonContainer: {\r\n  //     padding: 15,\r\n  //     flex: 1,\r\n  //   },\r\n  //   skeletonHeader: {height: 60},\r\n  //   skeletonContent: {\r\n  //     flex: 1,\r\n  //     marginTop: 15,\r\n  //     overflow: 'hidden',\r\n  //   },\r\n  //   skeletonContentRow: {\r\n  //     flexDirection: 'row',\r\n  //     justifyContent: 'space-between',\r\n  //     marginBottom: 15,\r\n  //   },\r\n  //   skeleton: {\r\n  //     borderRadius: 10,\r\n  //     opacity: 0.3,\r\n  //   },\r\n  //   skeletonSmall: {\r\n  //     borderRadius: 5,\r\n  //     marginTop: 10,\r\n  //     opacity: 0.3,\r\n  //   },\r\n});\r\nexport default RequireInternet;\r\n","import React from 'react';\r\nimport {StyleSheet, useWindowDimensions, View} from 'react-native';\r\n\r\nimport {Button, Icon, Text} from '@rneui/themed';\r\n\r\nimport {Colors, Icons} from '../app/constants';\r\nimport {isMobileWebBrowser} from '../app/utils/isMobileWebBrowser';\r\n\r\ninterface WrapperProps {\r\n  children: JSX.Element | JSX.Element[];\r\n}\r\nconst Wrapper = ({children}: WrapperProps) => {\r\n  const {width} = useWindowDimensions();\r\n\r\n  if (isMobileWebBrowser() || width <= 576) {\r\n    return <>{children}</>;\r\n  }\r\n  // if (isMobileWebBrowser()) return children;\r\n\r\n  return (\r\n    <>\r\n      {children}\r\n      <View style={styles.footer}>\r\n        <Text style={styles.footerText}>\r\n          {'For best experience, download the app'}\r\n        </Text>\r\n        <Button\r\n          containerStyle={styles.submitButton}\r\n          onPress={() => {\r\n            window.open(\r\n              'https://drive.google.com/file/d/1jSvF128oKd4pizkIhjIpiZFEoBw7kRCB/view?usp=share_link',\r\n              '_blank',\r\n            );\r\n          }}\r\n        >\r\n          <Icon style={styles.buttonIcon} name={Icons.download} color=\"white\" />\r\n          Download (APK)\r\n        </Button>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  footer: {\r\n    // position: 'fixed',\r\n    // bottom: 0,\r\n    width: '100%',\r\n    backgroundColor: Colors.black,\r\n    //justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingVertical: '1rem',\r\n  },\r\n  footerText: {\r\n    color: Colors.white,\r\n  },\r\n  submitButton: {\r\n    marginTop: 20,\r\n  },\r\n  buttonIcon: {\r\n    marginRight: 10,\r\n  },\r\n});\r\nexport default Wrapper;\r\n","/* eslint-disable no-useless-escape */\r\nimport {Platform} from 'react-native';\r\n\r\nexport function isMobileWebBrowser() {\r\n  let mobileBrowserDetected = false;\r\n  if (Platform.OS === 'web') {\r\n    (({userAgent} = navigator) => {\r\n      if (\r\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\r\n          userAgent,\r\n        ) ||\r\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\r\n          userAgent.substr(0, 4),\r\n        )\r\n      )\r\n        mobileBrowserDetected = true;\r\n    })();\r\n  }\r\n  return mobileBrowserDetected;\r\n}\r\n","import {StatusBar} from 'expo-status-bar';\r\nimport React from 'react';\r\nimport {LogBox} from 'react-native';\r\nimport {SafeAreaProvider} from 'react-native-safe-area-context';\r\n\r\nimport {createTheme, ThemeProvider} from '@rneui/themed';\r\n\r\nimport {Colors, LightColors} from './src/app/constants';\r\nimport {DrawerNavigation} from './src/components/Navigation';\r\nimport RequireInternet from './src/components/RequireInternet';\r\nimport Wrapper from './src/components/Wrapper';\r\n\r\nconst theme = createTheme({\r\n  lightColors: LightColors,\r\n  mode: 'light',\r\n  components: {\r\n    Header: {\r\n      backgroundColor: Colors.headerBg,\r\n    },\r\n    Icon: {\r\n      color: Colors.black,\r\n      type: 'material-community',\r\n    },\r\n    Overlay: {\r\n      overlayStyle: {\r\n        backgroundColor: Colors.background,\r\n      },\r\n    },\r\n  },\r\n});\r\nconst App = () => {\r\n  LogBox.ignoreAllLogs();\r\n  return (\r\n    <>\r\n      <StatusBar\r\n        backgroundColor={Colors.headerBg}\r\n        translucent={false}\r\n      ></StatusBar>\r\n      <SafeAreaProvider>\r\n        <ThemeProvider theme={theme}>\r\n          <Wrapper>\r\n            <DrawerNavigation />\r\n            <RequireInternet />\r\n          </Wrapper>\r\n        </ThemeProvider>\r\n      </SafeAreaProvider>\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import {registerRootComponent} from 'expo';\r\n\r\nimport App from './App';\r\n\r\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\r\n// It also ensures that whether you load the app in Expo Go or in a native build,\r\n// the environment is set up appropriately\r\nregisterRootComponent(App);\r\n"],"sourceRoot":""}