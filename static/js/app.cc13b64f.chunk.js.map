{"version":3,"sources":["assets/no-image.png","assets/little-frog.png","assets/senpai-goddess-haven.png","assets/cover.png","assets/reddit.png","assets/facebook.png","assets/discord.png","src/app/constants/icons.ts","src/app/constants/sizes.ts","src/app/constants/colors.ts","src/app/services/api.ts","src/app/constants/variables.ts","src/app/hooks/useGSL.ts","src/components/Header.tsx","src/components/SetList/FilterForm/Fields/InputField.tsx","src/components/SetList/FilterForm/Fields/SelectField.tsx","src/components/Overlay.tsx","src/components/SetList/FilterForm/Fields/SearchField.tsx","src/components/SetList/FilterForm/index.tsx","src/components/SetList/FilterBar.tsx","src/components/CardDetails/CardImage.web.tsx","src/components/CardDetails/index.tsx","src/components/SetList/Gallery/GalleryImage.web.tsx","src/components/SetList/Gallery/GalleryItem.tsx","src/components/SetList/Gallery/index.tsx","src/views/GoddessStory.tsx","src/views/SenpaiGoddessHaven.tsx","src/app/navigation/routes/index.ts","src/components/Navigation/DrawerNavigation/DrawerContent.tsx","src/components/Navigation/DrawerNavigation/index.tsx","src/components/RequireInternet.tsx","src/components/Wrapper.web.tsx","src/app/utils/isMobileWebBrowser.ts","App.tsx","index.js"],"names":["module","exports","Icons","Sizes","LightColors","primary","secondary","background","black","white","greyOutline","searchBg","Colors","headerBg","transparent","axios","defaults","baseURL","responseBody","response","data","api","url","config","get","then","useGSL","useSWR","isLoading","cards","setNumbers","set_no","rarities","rarity","series","styles","StyleSheet","create","headerContainer","backgroundColor","flexDirection","toggleDrawerContainer","marginTop","marginHorizontal","toggleDrawerButton","height","headerContentContainer","padding","margin","flex","Header","props","navigation","children","showBackButton","View","style","containerStyle","buttonStyle","type","onPress","goBack","name","color","openDrawer","InputField","label","value","onFocus","onChangeText","listItem","Content","Input","inputField","placeholder","placeholderTextColor","paddingVertical","paddingHorizontal","borderBottomWidth","borderColor","textAlign","SelectField","isExpanded","onSelect","renderItem","useCallback","item","selectListItem","CheckBox","iconType","checkedIcon","uncheckedIcon","checked","Subtitle","Accordion","icon","listItemAccordion","content","formText","selectContainer","selectList","map","paddingLeft","fontSize","Overlay","isVisible","toggleOverlay","showClose","overlayStyle","overlay","fullScreen","onBackdropPress","overlayHeaderContainer","closeOverlayButtonContainer","closeOverlayButton","defaultProps","SearchField","useState","isOverlayVisible","setIsOverlayVisible","searchValue","setSearchValue","theme","useTheme","formattedData","filter","listData","useRef","current","listItemText","lightTheme","searchBarContainer","inputContainerStyle","colors","grey5","toLowerCase","includes","overlayContentContainer","estimatedItemSize","keyExtractor","borderBottomColor","borderTopColor","searchBarInputContainer","formContainer","paddingBottom","formHeader","title","marginLeft","clear","paddingTop","submitButton","FilterForm","onSubmit","formData","expanded","setExpanded","setFormData","handleExpanded","updateFormData","key","size","h3","Pressable","clearData","ID","Code","SetNumber","CardNumber","CharacterName","SeriesName","Rarity","ImageUrl","HasImage","FilterBar","sort","onFilter","onSort","isBSVisible","setIsBSVisible","toggleBottomSheet","titleContainer","filterButtonContainer","headerButton","sortButtonContainer","fontWeight","marginRight","imageContainer","image","resizeMode","width","imageWebview","borderWidth","overflowY","CardImage","Image","source","uri","useEffect","history","pushState","script","document","createElement","head","append","src","remove","className","container","alignItems","cardContainer","maxWidth","cardTitleContainer","rarityBadge","minWidth","raritytext","cardTitle","cardSubTitle","CardDetails","badgeStyle","textStyle","status","Title","Divider","GalleryImage","imageUrl","require","aspectRatio","shadowColor","setNoBadgeContainer","position","top","left","zIndex","cardNoBadgeContainer","right","badge","badgeText","textContent","cardFooter","GalleryItem","Gallery","useWindowDimensions","galleryData","setGalleryData","selectedCard","undefined","galleryColNo","cleanFilter","Object","keys","forEach","filteredData","order","a","b","localeCompare","Number","sortData","galleryContainer","numColumns","Platform","select","web","native","GoddessStory","setFilterData","setSortValue","SenpaiGoddessHaven","Routes","component","drawerContentContainer","overflow","drawerContentCoverImage","bottom","routesContainer","footer","footerButtonContainer","justifyContent","flexWrap","footerButtonSpacer","footerButtonImg","footerSubtitle","iconImg","DrawerContent","DrawerItem","navigate","Linking","openURL","Drawer","createDrawerNavigator","DrawerNavigation","NavigationContainer","documentTitle","formatter","Navigator","initialRouteName","screenOptions","headerShown","drawerContent","Screen","RequireInternet","netInfo","useNetInfo","isConnected","console","log","loading","loadingProps","h4","footerText","buttonIcon","Wrapper","defaultFooterState","localStorage","getItem","hideFooter","setHideFooter","mobileBrowserDetected","OS","navigator","userAgent","test","substr","isMobileWebBrowser","setItem","window","open","createTheme","lightColors","mode","components","Icon","App","LogBox","ignoreAllLogs","StatusBar","translucent","registerRootComponent"],"mappings":"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","file":"static/js/app.cc13b64f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-image.54669752.png\";","module.exports = __webpack_public_path__ + \"static/media/little-frog.d63d2f17.png\";","module.exports = __webpack_public_path__ + \"static/media/senpai-goddess-haven.716e7e5e.png\";","module.exports = __webpack_public_path__ + \"static/media/cover.68176387.png\";","module.exports = __webpack_public_path__ + \"static/media/reddit.32d935bb.png\";","module.exports = __webpack_public_path__ + \"static/media/facebook.822ce2ac.png\";","module.exports = __webpack_public_path__ + \"static/media/discord.575ff213.png\";","export const Icons = {\r\n  arrow_down: 'chevron-down',\r\n  arrow_left: 'chevron-left',\r\n  arrow_right: 'chevron-right',\r\n  menu: 'menu',\r\n  record: 'microphone',\r\n  filter: 'tune',\r\n  list: 'format-list-bulleted',\r\n  home: 'home',\r\n  search: 'magnify',\r\n  close: 'close',\r\n  sort_asc: 'sort-alphabetical-ascending',\r\n  sort_desc: 'sort-alphabetical-descending',\r\n  no_internet: 'access-point-remove',\r\n  download: 'cloud-download-outline',\r\n};\r\n","export const Sizes = {\r\n  sm: 576,\r\n  md: 768,\r\n  lg: 992,\r\n  xl: 1200,\r\n};\r\n","export const LightColors = {\r\n  primary: '#e85d64',\r\n  secondary: '#f2a4a8',\r\n  background: '#fffdfd',\r\n  black: '#43484d',\r\n  white: '#ffffff',\r\n  greyOutline: '#bfbfbf',\r\n  searchBg: '#393e42',\r\n};\r\nexport const Colors = {\r\n  ...LightColors,\r\n  headerBg: '#393e42',\r\n  transparent: 'transparent',\r\n};\r\n","import axios, {AxiosRequestConfig, AxiosResponse} from 'axios';\r\n\r\nimport {GSLBaseUrl} from '../constants';\r\n\r\naxios.defaults.baseURL = GSLBaseUrl;\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nexport const api = {\r\n  get: (url: string, config?: AxiosRequestConfig) =>\r\n    axios.get(url, config).then(responseBody),\r\n  post: (url: string, body: unknown) =>\r\n    axios.post(url, body).then(responseBody),\r\n  put: (url: string, body: unknown) => axios.put(url, body).then(responseBody),\r\n  delete: (url: string) => axios.delete(url).then(responseBody),\r\n  postForm: (url: string, file: Blob) => {\r\n    const formData = new FormData();\r\n    formData.append('File', file);\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: {\r\n          'Content-type': 'multipart/form-data',\r\n        },\r\n      })\r\n      .then(responseBody);\r\n  },\r\n};\r\n","export const GSLBaseUrl =\n  'https://arjunverano95.github.io/goddess-story-library';\n","import useSWR from 'swr';\r\n\r\nimport {GSLCard} from '../../models/GSLCard';\r\nimport {api} from '../services';\r\n\r\nexport const useGSL = (url: string) => {\r\n  const {data, isLoading} = useSWR<{\r\n    cards: GSLCard[];\r\n    set_no: string[];\r\n    rarity: string[];\r\n    series: string[];\r\n  }>(url, api.get);\r\n\r\n  return {\r\n    isLoading,\r\n    data: data?.cards,\r\n    setNumbers: data?.set_no,\r\n    rarities: data?.rarity,\r\n    series: data?.series,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\n\r\nimport {Button, Icon} from '@rneui/themed';\r\n\r\nimport {Colors, Icons} from '../app/constants';\r\nimport {NavigationParamList, NavigationProp} from '../app/navigation/types';\r\n\r\ninterface HeaderProps {\r\n  navigation: NavigationProp<keyof NavigationParamList>;\r\n  children?: JSX.Element | JSX.Element[];\r\n  showBackButton?: boolean;\r\n}\r\nconst Header = (props: HeaderProps) => {\r\n  const {navigation, children, showBackButton} = props;\r\n  return (\r\n    <View\r\n      style={[\r\n        styles.headerContainer,\r\n        showBackButton ? {backgroundColor: Colors.transparent} : {},\r\n      ]}\r\n    >\r\n      {showBackButton ? (\r\n        <Button\r\n          containerStyle={styles.toggleDrawerContainer}\r\n          buttonStyle={styles.toggleDrawerButton}\r\n          type=\"clear\"\r\n          onPress={async () => {\r\n            navigation.goBack();\r\n          }}\r\n        >\r\n          <Icon name={Icons.arrow_left} color={Colors.black} />\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          containerStyle={styles.toggleDrawerContainer}\r\n          buttonStyle={styles.toggleDrawerButton}\r\n          type=\"clear\"\r\n          onPress={async () => {\r\n            navigation.openDrawer();\r\n          }}\r\n        >\r\n          <Icon name={Icons.menu} color=\"white\" />\r\n        </Button>\r\n      )}\r\n\r\n      {children && (\r\n        <View style={styles.headerContentContainer}>{props.children}</View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  headerContainer: {\r\n    // paddingTop: 50,\r\n    backgroundColor: Colors.headerBg,\r\n    flexDirection: 'row',\r\n  },\r\n  toggleDrawerContainer: {\r\n    marginTop: 10,\r\n    marginHorizontal: 5,\r\n  },\r\n  toggleDrawerButton: {\r\n    height: 46,\r\n  },\r\n  headerContentContainer: {\r\n    padding: 0,\r\n    margin: 0,\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n});\r\nexport default Header;\r\n","import React from 'react';\r\nimport {StyleSheet} from 'react-native';\r\n\r\nimport {ListItem} from '@rneui/themed';\r\n\r\nimport {Colors} from '../../../../app/constants';\r\n\r\ninterface InputFieldProps {\r\n  label: string;\r\n  value: string;\r\n  onFocus: () => void;\r\n  onChangeText: (value: string) => void;\r\n}\r\nexport const InputField = (props: InputFieldProps) => {\r\n  const {label, value, onFocus, onChangeText} = props;\r\n  return (\r\n    <ListItem containerStyle={styles.listItem}>\r\n      <ListItem.Content>\r\n        <ListItem.Input\r\n          style={styles.inputField}\r\n          placeholder={label}\r\n          placeholderTextColor={Colors.greyOutline}\r\n          onFocus={onFocus}\r\n          onChangeText={onChangeText}\r\n          value={value}\r\n        />\r\n      </ListItem.Content>\r\n    </ListItem>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  listItem: {\r\n    marginHorizontal: 0,\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 0,\r\n    borderBottomWidth: 1,\r\n    borderColor: Colors.greyOutline,\r\n    height: 50,\r\n  },\r\n  inputField: {\r\n    textAlign: 'left',\r\n    color: Colors.black,\r\n  },\r\n});\r\n","import React, {useCallback} from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\nimport {ScrollView} from 'react-native-gesture-handler';\r\n\r\nimport {Icon, ListItem, Text} from '@rneui/themed';\r\n\r\nimport {Colors, Icons} from '../../../../app/constants';\r\n\r\ninterface SelectFieldProps {\r\n  value: string;\r\n  label: string;\r\n  data: string[];\r\n  isExpanded: boolean;\r\n  onPress: () => void;\r\n  onSelect: (item: string) => void;\r\n}\r\nexport const SelectField = (props: SelectFieldProps) => {\r\n  const {value, label, data, isExpanded, onPress, onSelect} = props;\r\n  const renderItem = useCallback(\r\n    ({item}: {item: string}) => {\r\n      return (\r\n        <ListItem key={item} containerStyle={styles.selectListItem}>\r\n          <ListItem.CheckBox\r\n            // Use ThemeProvider to change the defaults of the checkbox\r\n            iconType=\"material-community\"\r\n            checkedIcon=\"checkbox-marked\"\r\n            uncheckedIcon=\"checkbox-blank-outline\"\r\n            checked={item === value}\r\n            onPress={() => {\r\n              onSelect(item);\r\n            }}\r\n          />\r\n          <ListItem.Content>\r\n            <ListItem.Subtitle>{item}</ListItem.Subtitle>\r\n          </ListItem.Content>\r\n        </ListItem>\r\n      );\r\n    },\r\n    [onSelect],\r\n  );\r\n  const SelectList = () => {\r\n    return <>{data.map((item) => renderItem({item}))}</>;\r\n  };\r\n  return (\r\n    <ListItem.Accordion\r\n      icon={<Icon name={Icons.arrow_down} />}\r\n      containerStyle={[styles.listItem, styles.listItemAccordion]}\r\n      content={\r\n        <ListItem.Content>\r\n          <Text style={[styles.formText, !value ? {} : {color: Colors.black}]}>\r\n            {!value ? label : value}\r\n          </Text>\r\n        </ListItem.Content>\r\n      }\r\n      isExpanded={isExpanded}\r\n      onPress={onPress}\r\n    >\r\n      <View style={styles.selectContainer}>\r\n        <ScrollView style={styles.selectList}>\r\n          <SelectList />\r\n        </ScrollView>\r\n      </View>\r\n    </ListItem.Accordion>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  listItem: {\r\n    marginHorizontal: 0,\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 0,\r\n    borderBottomWidth: 1,\r\n    borderColor: Colors.greyOutline,\r\n    height: 50,\r\n  },\r\n  listItemAccordion: {\r\n    paddingLeft: 10,\r\n    color: Colors.black,\r\n  },\r\n  selectContainer: {\r\n    borderBottomWidth: 1,\r\n    borderColor: Colors.greyOutline,\r\n    height: 200,\r\n  },\r\n  selectList: {\r\n    height: 200,\r\n  },\r\n  selectListItem: {\r\n    paddingVertical: 5,\r\n  },\r\n  formText: {fontSize: 18, color: Colors.greyOutline},\r\n});\r\n","import React from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\n\r\nimport {Button, Icon, Overlay as RNEOverlay} from '@rneui/themed';\r\n\r\nimport {Colors, Icons} from '../app/constants';\r\n\r\ninterface HeaderProps {\r\n  isVisible: boolean;\r\n  toggleOverlay: () => void;\r\n  children: JSX.Element | JSX.Element[];\r\n  showClose?: boolean;\r\n}\r\nconst Overlay = (props: HeaderProps) => {\r\n  const {children, isVisible, toggleOverlay, showClose} = props;\r\n  return (\r\n    <RNEOverlay\r\n      overlayStyle={styles.overlay}\r\n      fullScreen={true}\r\n      isVisible={isVisible}\r\n      onBackdropPress={toggleOverlay}\r\n    >\r\n      {showClose && (\r\n        <View style={styles.overlayHeaderContainer}>\r\n          <Button\r\n            containerStyle={styles.closeOverlayButtonContainer}\r\n            buttonStyle={styles.closeOverlayButton}\r\n            type=\"clear\"\r\n            onPress={() => {\r\n              toggleOverlay();\r\n            }}\r\n          >\r\n            <Icon name={Icons.close} color={Colors.black} />\r\n          </Button>\r\n        </View>\r\n      )}\r\n\r\n      {children && <>{props.children}</>}\r\n    </RNEOverlay>\r\n  );\r\n};\r\nOverlay.defaultProps = {\r\n  showClose: true,\r\n};\r\nconst styles = StyleSheet.create({\r\n  overlay: {padding: 0},\r\n  overlayHeaderContainer: {\r\n    flexDirection: 'row-reverse',\r\n  },\r\n  closeOverlayButtonContainer: {\r\n    marginTop: 10,\r\n    marginHorizontal: 5,\r\n  },\r\n  closeOverlayButton: {\r\n    height: 46,\r\n  },\r\n});\r\n\r\nexport default Overlay;\r\n","import React, {useCallback, useRef, useState} from 'react';\r\nimport {StyleSheet} from 'react-native';\r\nimport {SafeAreaView} from 'react-native-safe-area-context';\r\n\r\nimport {Icon, ListItem, SearchBar, Text, useTheme} from '@rneui/themed';\r\nimport {FlashList} from '@shopify/flash-list';\r\n\r\nimport {Colors, Icons} from '../../../../app/constants';\r\nimport Overlay from '../../../Overlay';\r\n\r\ninterface SearchFieldProps {\r\n  label: string;\r\n  value: string;\r\n  data: string[];\r\n  onPress: () => void;\r\n  onSelect: (item: string) => void;\r\n}\r\nexport const SearchField = (props: SearchFieldProps) => {\r\n  const {label, value, data, onPress, onSelect} = props;\r\n  const [isOverlayVisible, setIsOverlayVisible] = useState(false);\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const {theme} = useTheme();\r\n\r\n  const formattedData = !value\r\n    ? data\r\n    : [value, ...data.filter((item) => item !== value)];\r\n  const listData = useRef(formattedData);\r\n\r\n  const toggleOverlay = () => {\r\n    listData.current = formattedData;\r\n    setSearchValue('');\r\n    setIsOverlayVisible(!isOverlayVisible);\r\n  };\r\n  const handleSearch = (value: string) => {\r\n    if (!value) listData.current = formattedData;\r\n    else\r\n      listData.current = [\r\n        ...data.filter((item) => {\r\n          return `${item}`.toLowerCase().includes(value.toLowerCase());\r\n        }),\r\n      ];\r\n    setSearchValue(value);\r\n  };\r\n  const renderItem = useCallback(\r\n    ({item}: {item: string}) => {\r\n      return (\r\n        <ListItem containerStyle={styles.selectListItem}>\r\n          <ListItem.CheckBox\r\n            // Use ThemeProvider to change the defaults of the checkbox\r\n            iconType=\"material-community\"\r\n            checkedIcon=\"checkbox-marked\"\r\n            uncheckedIcon=\"checkbox-blank-outline\"\r\n            checked={item === value}\r\n            onPress={() => {\r\n              onSelect(item);\r\n              toggleOverlay();\r\n            }}\r\n          />\r\n          <ListItem.Content>\r\n            <ListItem.Subtitle>{item}</ListItem.Subtitle>\r\n          </ListItem.Content>\r\n        </ListItem>\r\n      );\r\n    },\r\n    [toggleOverlay],\r\n  );\r\n  return (\r\n    <>\r\n      <ListItem\r\n        containerStyle={[styles.listItem, styles.listItemText]}\r\n        onPress={() => {\r\n          onPress();\r\n          toggleOverlay();\r\n        }}\r\n      >\r\n        <ListItem.Content>\r\n          <Text style={[styles.formText, !value ? {} : {color: Colors.black}]}>\r\n            {!value ? label : value}\r\n          </Text>\r\n        </ListItem.Content>\r\n        <Icon name={Icons.arrow_right} />\r\n      </ListItem>\r\n      <Overlay isVisible={isOverlayVisible} toggleOverlay={toggleOverlay}>\r\n        <SearchBar\r\n          lightTheme={true}\r\n          containerStyle={styles.searchBarContainer}\r\n          inputContainerStyle={{backgroundColor: theme.colors.grey5}}\r\n          placeholder={label}\r\n          onChangeText={handleSearch}\r\n          value={searchValue}\r\n        />\r\n        <SafeAreaView style={styles.overlayContentContainer}>\r\n          <FlashList\r\n            data={listData.current}\r\n            renderItem={renderItem}\r\n            estimatedItemSize={36}\r\n            keyExtractor={(item) => item}\r\n          />\r\n        </SafeAreaView>\r\n      </Overlay>\r\n    </>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  listItem: {\r\n    marginHorizontal: 0,\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 0,\r\n    borderBottomWidth: 1,\r\n    borderColor: Colors.greyOutline,\r\n    height: 50,\r\n  },\r\n  formText: {fontSize: 18, color: Colors.greyOutline},\r\n  listItemText: {\r\n    paddingLeft: 10,\r\n    color: Colors.black,\r\n  },\r\n\r\n  overlayContentContainer: {\r\n    margin: 10,\r\n    flex: 1,\r\n  },\r\n  searchBarContainer: {\r\n    backgroundColor: Colors.transparent,\r\n    borderBottomColor: Colors.transparent,\r\n    borderTopColor: Colors.transparent,\r\n  },\r\n  searchBarInputContainer: {\r\n    backgroundColor: Colors.transparent,\r\n    borderBottomColor: Colors.transparent,\r\n    borderTopColor: Colors.transparent,\r\n  },\r\n  selectListItem: {\r\n    paddingVertical: 5,\r\n  },\r\n});\r\n","import React, {useState} from 'react';\r\nimport {Pressable, StyleSheet, View} from 'react-native';\r\n\r\nimport {Button, Icon, Text} from '@rneui/themed';\r\n\r\nimport {Colors, Icons} from '../../../app/constants';\r\nimport {GSLCard} from '../../../models/GSLCard';\r\nimport {InputField, SearchField, SelectField} from './Fields';\r\n\r\ninterface FilterFormProps {\r\n  data: GSLCard;\r\n  formData: {setNumbers: string[]; rarities: string[]; series: string[]};\r\n  onSubmit: (value: GSLCard) => void;\r\n}\r\nconst FilterForm = (props: FilterFormProps) => {\r\n  const {\r\n    data,\r\n    onSubmit,\r\n    formData: {setNumbers, rarities, series},\r\n  } = props;\r\n  const [expanded, setExpanded] = useState('');\r\n  const [formData, setFormData] = useState<GSLCard>({...data});\r\n\r\n  const handleExpanded = (value?: string) => {\r\n    if (!value || expanded === value) setExpanded(null);\r\n    else setExpanded(value);\r\n  };\r\n  const updateFormData = (key: string, value: string) => {\r\n    if (formData[key] === value) setFormData({...formData, ...{[key]: ''}});\r\n    else setFormData({...formData, ...{[key]: value}});\r\n  };\r\n  return (\r\n    <>\r\n      <View style={styles.formContainer}>\r\n        <View style={styles.formHeader}>\r\n          <Icon name={Icons.filter} size={45} />\r\n          <Text h3 style={styles.title}>\r\n            {'Filter'}\r\n          </Text>\r\n          <Pressable\r\n            style={styles.clear}\r\n            onPress={() => {\r\n              const clearData: GSLCard = {\r\n                ID: '',\r\n                Code: '',\r\n                SetNumber: '',\r\n                CardNumber: '',\r\n                CharacterName: '',\r\n                SeriesName: '',\r\n                Rarity: '',\r\n                ImageUrl: '',\r\n                HasImage: '',\r\n              };\r\n              setFormData(clearData);\r\n              handleExpanded();\r\n              onSubmit(clearData);\r\n            }}\r\n          >\r\n            <Text>{'Reset'}</Text>\r\n          </Pressable>\r\n        </View>\r\n        <SelectField\r\n          label={'Set'}\r\n          value={formData.SetNumber}\r\n          data={setNumbers}\r\n          isExpanded={expanded === 'SetNumber'}\r\n          onPress={() => {\r\n            handleExpanded('SetNumber');\r\n          }}\r\n          onSelect={(item) => {\r\n            updateFormData('SetNumber', item);\r\n            handleExpanded('SetNumber');\r\n          }}\r\n        />\r\n        <InputField\r\n          label={'Card No.'}\r\n          onFocus={() => {\r\n            handleExpanded();\r\n          }}\r\n          onChangeText={(value) => {\r\n            updateFormData('CardNumber', value);\r\n          }}\r\n          value={formData.CardNumber}\r\n        />\r\n\r\n        <SelectField\r\n          label={'Rarity'}\r\n          value={formData.Rarity}\r\n          data={rarities}\r\n          isExpanded={expanded === 'Rarity'}\r\n          onPress={() => {\r\n            handleExpanded('Rarity');\r\n          }}\r\n          onSelect={(item) => {\r\n            updateFormData('Rarity', item);\r\n            handleExpanded('Rarity');\r\n          }}\r\n        />\r\n        <InputField\r\n          label={'Character'}\r\n          onFocus={() => {\r\n            handleExpanded();\r\n          }}\r\n          onChangeText={(value) => {\r\n            updateFormData('CharacterName', value);\r\n          }}\r\n          value={formData.CharacterName}\r\n        />\r\n        <SearchField\r\n          value={formData.SeriesName}\r\n          label={'Series'}\r\n          data={series}\r\n          onPress={() => {\r\n            handleExpanded();\r\n          }}\r\n          onSelect={(item) => {\r\n            updateFormData('SeriesName', item);\r\n          }}\r\n        />\r\n\r\n        <Button\r\n          containerStyle={styles.submitButton}\r\n          title={'Submit'}\r\n          onPress={() => {\r\n            handleExpanded();\r\n            onSubmit(formData);\r\n          }}\r\n        />\r\n      </View>\r\n    </>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  formContainer: {\r\n    backgroundColor: Colors.background,\r\n    paddingHorizontal: 25,\r\n    paddingBottom: 25,\r\n  },\r\n  formHeader: {flexDirection: 'row', paddingVertical: 25},\r\n  title: {marginLeft: 10, flex: 1},\r\n  clear: {\r\n    paddingTop: 12,\r\n    paddingHorizontal: 10,\r\n  },\r\n  submitButton: {\r\n    marginTop: 20,\r\n  },\r\n});\r\n\r\nexport default FilterForm;\r\n","import React, {useState} from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\n\r\nimport {BottomSheet, Button, Icon, Text} from '@rneui/themed';\r\n\r\nimport {Colors, Icons} from '../../app/constants';\r\nimport {GSLCard} from '../../models/GSLCard';\r\nimport FilterForm from './FilterForm';\r\n\r\ninterface FilterBarProps {\r\n  title: string;\r\n  filter: GSLCard;\r\n  formData: {setNumbers: string[]; rarities: string[]; series: string[]};\r\n  sort: 'asc' | 'desc';\r\n  onFilter: (value: GSLCard) => void;\r\n  onSort: (value: 'asc' | 'desc') => void;\r\n}\r\n\r\nexport const FilterBar = (props: FilterBarProps) => {\r\n  const {title, filter, formData, sort, onFilter, onSort} = props;\r\n  const [isBSVisible, setIsBSVisible] = useState(false);\r\n\r\n  const toggleBottomSheet = () => {\r\n    setIsBSVisible(!isBSVisible);\r\n  };\r\n  return (\r\n    <>\r\n      <View style={styles.titleContainer}>\r\n        <Text style={styles.title}>\r\n          {!filter.SetNumber ? title : filter.SetNumber}\r\n        </Text>\r\n      </View>\r\n      <Button\r\n        containerStyle={styles.filterButtonContainer}\r\n        buttonStyle={styles.headerButton}\r\n        type=\"clear\"\r\n        onPress={async () => {\r\n          setIsBSVisible(true);\r\n        }}\r\n      >\r\n        <Icon name={Icons.filter} color=\"white\" />\r\n      </Button>\r\n      <Button\r\n        containerStyle={styles.sortButtonContainer}\r\n        buttonStyle={styles.headerButton}\r\n        type=\"clear\"\r\n        onPress={async () => {\r\n          onSort(sort === 'asc' ? 'desc' : 'asc');\r\n        }}\r\n      >\r\n        <Icon\r\n          name={sort === 'asc' ? Icons.sort_asc : Icons.sort_desc}\r\n          color=\"white\"\r\n        />\r\n      </Button>\r\n      <BottomSheet\r\n        onBackdropPress={() => {\r\n          toggleBottomSheet();\r\n        }}\r\n        isVisible={isBSVisible}\r\n      >\r\n        <FilterForm\r\n          data={filter}\r\n          formData={formData}\r\n          onSubmit={(data) => {\r\n            onFilter(data);\r\n            toggleBottomSheet();\r\n          }}\r\n        />\r\n      </BottomSheet>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  titleContainer: {\r\n    flex: 1,\r\n    paddingLeft: 10,\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginTop: 19,\r\n    color: Colors.white,\r\n  },\r\n  filterButtonContainer: {\r\n    marginTop: 10,\r\n  },\r\n  sortButtonContainer: {\r\n    marginTop: 10,\r\n    marginRight: 8,\r\n  },\r\n  headerButton: {\r\n    height: 46,\r\n  },\r\n});\r\n","import React, {useEffect} from 'react';\r\nimport {Image, StyleSheet, View} from 'react-native';\r\n\r\nimport {Colors} from '../../app/constants';\r\nimport {GSLCard} from '../../models/GSLCard';\r\n\r\ninterface CardImageProps {\r\n  data: GSLCard;\r\n}\r\n\r\nconst CardImage = (props: CardImageProps) => {\r\n  const {data} = props;\r\n\r\n  if (data.ImageUrl)\r\n    return (\r\n      <View style={styles.imageContainer}>\r\n        <Image\r\n          style={styles.image}\r\n          source={{\r\n            uri: data.ImageUrl,\r\n          }}\r\n          resizeMode={'contain'}\r\n        />\r\n      </View>\r\n    );\r\n  else {\r\n    useEffect(() => {\r\n      history.pushState(\r\n        null,\r\n        '',\r\n        `#gsc.tab=1&gsc.q=${data.SeriesName} ${data.CharacterName}`,\r\n      );\r\n      const script = document.createElement('script');\r\n      document.head.append(script);\r\n      script.src = `https://cse.google.com/cse.js?cx=64bb5bd8971ac4f24`;\r\n\r\n      return () => {\r\n        script.remove();\r\n      };\r\n    }, []);\r\n    return (\r\n      <>\r\n        <View style={styles.imageWebview}>\r\n          <div className=\"gcse-searchresults-only\"></div>\r\n        </View>\r\n      </>\r\n    );\r\n  }\r\n};\r\nconst styles = StyleSheet.create({\r\n  imageContainer: {\r\n    flex: 1,\r\n    margin: 15,\r\n    backgroundColor: Colors.white,\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    height: null,\r\n    resizeMode: 'contain',\r\n    width: null,\r\n  },\r\n  imageWebview: {\r\n    flex: 1,\r\n    margin: 20,\r\n    backgroundColor: Colors.white,\r\n    borderWidth: 0,\r\n    overflowY: 'auto',\r\n  },\r\n});\r\nexport default CardImage;\r\n","import React from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\n\r\nimport {Badge, Card, Text} from '@rneui/themed';\r\n\r\nimport {Colors, Sizes} from '../../app/constants';\r\nimport {GSLCard} from '../../models/GSLCard';\r\nimport CardImage from './CardImage';\r\n\r\ninterface CardDetailsProps {\r\n  data: GSLCard;\r\n}\r\n\r\nconst CardDetails = (props: CardDetailsProps) => {\r\n  const {data} = props;\r\n\r\n  if (!data) return <></>;\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.container}>\r\n        <Card containerStyle={styles.cardContainer}>\r\n          <View style={styles.cardTitleContainer}>\r\n            <Badge\r\n              badgeStyle={styles.rarityBadge}\r\n              textStyle={styles.raritytext}\r\n              value={data.Rarity}\r\n              status=\"warning\"\r\n            />\r\n            <Card.Title\r\n              style={styles.cardTitle}\r\n            >{`${data.CharacterName}`}</Card.Title>\r\n            <Card.Title style={styles.cardSubTitle}>\r\n              {data.SetNumber}\r\n            </Card.Title>\r\n          </View>\r\n          <Card.Divider />\r\n          <View>\r\n            <Text>{`Series: ${data.SeriesName}`}</Text>\r\n            <Text>{`ID: ${data.ID}`}</Text>\r\n            {/* <Text>{`Character Name: ${data.CharacterName}`}</Text> */}\r\n            {/* <Text>{`Rarity: ${data.Rarity}`}</Text> */}\r\n          </View>\r\n        </Card>\r\n        <View style={styles.imageContainer}>\r\n          <CardImage data={data} />\r\n        </View>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  container: {alignItems: 'center', paddingHorizontal: 10, flex: 1},\r\n  cardContainer: {\r\n    borderWidth: 0,\r\n    backgroundColor: Colors.white,\r\n    marginTop: 10,\r\n    width: '100%',\r\n    maxWidth: Sizes.sm,\r\n  },\r\n  cardTitleContainer: {flexDirection: 'row'},\r\n  rarityBadge: {\r\n    height: 22,\r\n    minWidth: 45,\r\n    paddingHorizontal: 5,\r\n    marginRight: 5,\r\n  },\r\n  raritytext: {fontWeight: 'bold'}, // alignSelf: 'flex-start'}\r\n  cardTitle: {flex: 1, textAlign: 'left'},\r\n  cardSubTitle: {fontWeight: 'normal'},\r\n  imageContainer: {\r\n    width: '100%',\r\n    maxWidth: Sizes.sm,\r\n    flex: 1,\r\n  },\r\n});\r\nexport default CardDetails;\r\n","import React from 'react';\r\nimport {Image, ImageStyle, StyleProp, ViewStyle} from 'react-native';\r\n\r\ninterface GalleryImageProps {\r\n  imageUrl?: string;\r\n  style: StyleProp<ImageStyle>;\r\n  containerStyle?: StyleProp<ViewStyle>;\r\n}\r\n\r\nconst GalleryImage = (props: GalleryImageProps) => {\r\n  return (\r\n    <Image\r\n      style={props.style}\r\n      source={\r\n        !props.imageUrl\r\n          ? require('../../../../assets/no-image.png')\r\n          : {\r\n              uri: props.imageUrl,\r\n            }\r\n      }\r\n      resizeMode={'cover'}\r\n    />\r\n  );\r\n};\r\n\r\nexport default GalleryImage;\r\n","import React from 'react';\r\nimport {Pressable, StyleSheet, View} from 'react-native';\r\n\r\nimport {Badge, Card, Text} from '@rneui/themed';\r\n\r\nimport {Colors} from '../../../app/constants';\r\nimport {GSLCard} from '../../../models/GSLCard';\r\nimport GalleryImage from './GalleryImage';\r\n\r\ninterface GalleryItemProps {\r\n  data: GSLCard;\r\n  onPress: (value: GSLCard) => void;\r\n}\r\nconst GalleryItem = (props: GalleryItemProps) => {\r\n  const {data, onPress} = props;\r\n  return (\r\n    <Card containerStyle={styles.cardContainer}>\r\n      <Pressable\r\n        onPress={() => {\r\n          onPress(data);\r\n        }}\r\n      >\r\n        <View>\r\n          <Badge\r\n            containerStyle={styles.setNoBadgeContainer}\r\n            badgeStyle={styles.badge}\r\n            textStyle={styles.badgeText}\r\n            value={data.SetNumber}\r\n            status=\"warning\"\r\n          />\r\n          <Badge\r\n            containerStyle={styles.cardNoBadgeContainer}\r\n            badgeStyle={styles.badge}\r\n            textStyle={styles.badgeText}\r\n            value={data.CardNumber}\r\n            status=\"success\"\r\n          />\r\n          <GalleryImage style={styles.image} imageUrl={data.ImageUrl} />\r\n        </View>\r\n        <View style={styles.cardFooter}>\r\n          <View style={styles.cardTitleContainer}>\r\n            <Text style={styles.cardTitle}>{`${data.CharacterName}`}</Text>\r\n            <Text style={styles.cardSubTitle}>{data.Rarity}</Text>\r\n          </View>\r\n          <View>\r\n            <Text style={styles.textContent}>{data.SeriesName}</Text>\r\n          </View>\r\n        </View>\r\n      </Pressable>\r\n    </Card>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    aspectRatio: 1,\r\n    width: '100%',\r\n    flex: 1,\r\n  },\r\n  cardContainer: {\r\n    borderWidth: 0,\r\n    shadowColor: Colors.transparent,\r\n    // maxWidth: '50%',\r\n    flex: 1,\r\n    margin: 0,\r\n    paddingHorizontal: 5,\r\n    paddingTop: 10,\r\n    paddingBottom: 0,\r\n  },\r\n  cardTitleContainer: {flexDirection: 'row'},\r\n  setNoBadgeContainer: {\r\n    position: 'absolute',\r\n    top: 5,\r\n    left: 10,\r\n    zIndex: 999,\r\n  },\r\n  cardNoBadgeContainer: {\r\n    position: 'absolute',\r\n    top: 5,\r\n    right: 5,\r\n    zIndex: 999,\r\n  },\r\n  badge: {\r\n    height: 20,\r\n    minWidth: 40,\r\n    paddingHorizontal: 1,\r\n    marginRight: 5,\r\n    fontSize: 9,\r\n  },\r\n  badgeText: {fontWeight: 'bold'}, // alignSelf: 'flex-start'}\r\n  cardTitle: {flex: 1, textAlign: 'left', fontSize: 12},\r\n  cardSubTitle: {textAlign: 'right', fontSize: 12, fontWeight: 'bold'},\r\n  textContent: {fontSize: 11, color: Colors.greyOutline},\r\n  cardFooter: {paddingHorizontal: 8, paddingVertical: 3},\r\n});\r\nexport default GalleryItem;\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport {Platform, StyleSheet, useWindowDimensions} from 'react-native';\r\nimport {SafeAreaView} from 'react-native-safe-area-context';\r\n\r\nimport {FlashList} from '@shopify/flash-list';\r\n\r\nimport {Colors, Sizes} from '../../../app/constants';\r\nimport {GSLCard} from '../../../models/GSLCard';\r\nimport CardDetails from '../../CardDetails';\r\nimport Overlay from '../../Overlay';\r\nimport GalleryItem from './GalleryItem';\r\n\r\ninterface GalleryProps {\r\n  data: GSLCard[];\r\n  filter: GSLCard;\r\n  sort: 'asc' | 'desc';\r\n}\r\n\r\nexport const Gallery = (props: GalleryProps) => {\r\n  const {width} = useWindowDimensions();\r\n  const {data, filter, sort} = props;\r\n  const [galleryData, setGalleryData] = useState<GSLCard[]>([]);\r\n  const [isOverlayVisible, setIsOverlayVisible] = useState(false);\r\n  const selectedCard = useRef<GSLCard>(undefined);\r\n  let galleryColNo = 2;\r\n\r\n  if (width < Sizes.sm) {\r\n    galleryColNo = 2;\r\n  } else if (width >= Sizes.sm && width < Sizes.md) {\r\n    galleryColNo = 3;\r\n  } else if (width >= Sizes.md && width < Sizes.lg) {\r\n    galleryColNo = 5;\r\n  } else {\r\n    galleryColNo = 6;\r\n  }\r\n\r\n  const toggleOverlay = () => {\r\n    setIsOverlayVisible(!isOverlayVisible);\r\n  };\r\n  useEffect(() => {\r\n    if (data) {\r\n      const cleanFilter = {...filter};\r\n      Object.keys(cleanFilter).forEach((key) => {\r\n        if (!cleanFilter[key]) {\r\n          delete cleanFilter[key];\r\n        }\r\n      });\r\n      const sortData = (data: GSLCard[], order: 'asc' | 'desc') => {\r\n        if (order === 'asc') {\r\n          return data.sort(\r\n            (a, b) =>\r\n              a.SetNumber.localeCompare(b.SetNumber) ||\r\n              b.Rarity.localeCompare(a.Rarity) ||\r\n              Number(a.CardNumber) - Number(b.CardNumber),\r\n          );\r\n        } else {\r\n          return data.sort(\r\n            (a, b) =>\r\n              a.SetNumber.localeCompare(b.SetNumber) ||\r\n              b.Rarity.localeCompare(a.Rarity) ||\r\n              Number(b.CardNumber) - Number(a.CardNumber),\r\n          );\r\n        }\r\n      };\r\n\r\n      const filteredData = data.filter((item) => {\r\n        for (const key in cleanFilter) {\r\n          if (cleanFilter[key]) {\r\n            if (key === 'CharacterName') {\r\n              if (\r\n                !item[key]\r\n                  .toLowerCase()\r\n                  .includes(cleanFilter[key].toLowerCase())\r\n              )\r\n                return false;\r\n            } else if (item[key] != cleanFilter[key]) return false;\r\n          }\r\n        }\r\n        return true;\r\n      });\r\n      setGalleryData(sortData(filteredData, sort));\r\n    }\r\n  }, [data, filter, sort]);\r\n  return (\r\n    <>\r\n      <SafeAreaView style={styles.galleryContainer}>\r\n        <FlashList\r\n          data={galleryData}\r\n          numColumns={galleryColNo}\r\n          keyExtractor={(item) => item.Code}\r\n          estimatedItemSize={248}\r\n          renderItem={({item}) => (\r\n            <GalleryItem\r\n              data={item}\r\n              onPress={(item) => {\r\n                selectedCard.current = item;\r\n                toggleOverlay();\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </SafeAreaView>\r\n      <Overlay isVisible={isOverlayVisible} toggleOverlay={toggleOverlay}>\r\n        {selectedCard && <CardDetails data={selectedCard.current} />}\r\n      </Overlay>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  galleryContainer: {\r\n    flex: 1,\r\n    paddingBottom: Platform.select({web: 0, native: 10}),\r\n    backgroundColor: Colors.background,\r\n  },\r\n});\r\n","import React, {useState} from 'react';\r\n\r\nimport {useGSL} from '../app/hooks/useGSL';\r\nimport {ScreenProps} from '../app/navigation/types';\r\nimport Header from '../components/Header';\r\nimport {FilterBar, Gallery} from '../components/SetList';\r\nimport {GSLCard} from '../models/GSLCard';\r\n\r\nconst GoddessStory = (props: ScreenProps<'GoddessStory'>) => {\r\n  const {navigation} = props;\r\n  const {data, setNumbers, rarities, series} = useGSL(\r\n    '/data/goddess-story.json',\r\n  );\r\n\r\n  const [filter, setFilterData] = useState<GSLCard>({\r\n    ID: '',\r\n    Code: '',\r\n    SetNumber: '',\r\n    CardNumber: '',\r\n    CharacterName: '',\r\n    SeriesName: '',\r\n    Rarity: '',\r\n    ImageUrl: '',\r\n    HasImage: '',\r\n  });\r\n  const [sort, setSortValue] = useState<'asc' | 'desc'>('asc');\r\n  const onFilter = (value: GSLCard) => {\r\n    setFilterData(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header navigation={navigation}>\r\n        <FilterBar\r\n          title={'Goddess Story'}\r\n          sort={sort}\r\n          filter={filter}\r\n          formData={{setNumbers, rarities, series}}\r\n          onFilter={onFilter}\r\n          onSort={(value) => {\r\n            setSortValue(value);\r\n          }}\r\n        />\r\n      </Header>\r\n\r\n      <Gallery data={data} filter={filter} sort={sort} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GoddessStory;\r\n","import React, {useState} from 'react';\r\n\r\nimport {useGSL} from '../app/hooks/useGSL';\r\nimport {ScreenProps} from '../app/navigation/types';\r\nimport Header from '../components/Header';\r\nimport {FilterBar, Gallery} from '../components/SetList';\r\nimport {GSLCard} from '../models/GSLCard';\r\n\r\nconst SenpaiGoddessHaven = (props: ScreenProps<'SenpaiGoddessHaven'>) => {\r\n  const {navigation} = props;\r\n  const {data, setNumbers, rarities, series} = useGSL(\r\n    '/data/senpai-goddess-haven.json',\r\n  );\r\n\r\n  const [filter, setFilterData] = useState<GSLCard>({\r\n    ID: '',\r\n    Code: '',\r\n    SetNumber: '',\r\n    CardNumber: '',\r\n    CharacterName: '',\r\n    SeriesName: '',\r\n    Rarity: '',\r\n    ImageUrl: '',\r\n    HasImage: '',\r\n  });\r\n  const [sort, setSortValue] = useState<'asc' | 'desc'>('asc');\r\n  const onFilter = (value: GSLCard) => {\r\n    setFilterData(value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header navigation={navigation}>\r\n        <FilterBar\r\n          title={'Senpai Goddess Haven'}\r\n          sort={sort}\r\n          filter={filter}\r\n          formData={{setNumbers, rarities, series}}\r\n          onFilter={onFilter}\r\n          onSort={(value) => {\r\n            setSortValue(value);\r\n          }}\r\n        />\r\n      </Header>\r\n\r\n      <Gallery data={data} filter={filter} sort={sort} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SenpaiGoddessHaven;\r\n","import GoddessStory from '../../../views/GoddessStory';\r\nimport SenpaiGoddessHaven from '../../../views/SenpaiGoddessHaven';\r\nimport {NavigationParamList, ScreenProps} from '../types';\r\n\r\ninterface Routes {\r\n  name: keyof NavigationParamList;\r\n  label: string;\r\n  icon: number;\r\n  component: (props: ScreenProps<keyof NavigationParamList>) => JSX.Element;\r\n}\r\n\r\nconst Routes: Routes[] = [\r\n  {\r\n    name: 'GoddessStory',\r\n    label: 'Goddess Story',\r\n    icon: require('../../../../assets/little-frog.png'),\r\n    component: GoddessStory,\r\n  },\r\n  {\r\n    name: 'SenpaiGoddessHaven',\r\n    label: 'Senpai Goddess Haven',\r\n    icon: require('../../../../assets/senpai-goddess-haven.png'),\r\n    component: SenpaiGoddessHaven,\r\n  },\r\n];\r\nexport const initialRoute: keyof NavigationParamList = 'GoddessStory';\r\nexport default Routes;\r\n","import React from 'react';\r\nimport {Image, Linking, Pressable, StyleSheet, View} from 'react-native';\r\n\r\nimport {\r\n  DrawerContentComponentProps,\r\n  DrawerItem,\r\n} from '@react-navigation/drawer';\r\nimport {Text} from '@rneui/themed';\r\n\r\nimport Routes from '../../../app/navigation/routes';\r\n\r\nconst DrawerContent = (props: DrawerContentComponentProps) => {\r\n  const {navigation} = props;\r\n  return (\r\n    <View style={{flex: 1}}>\r\n      <View style={styles.drawerContentContainer}>\r\n        <Image\r\n          style={styles.drawerContentCoverImage}\r\n          source={require('../../../../assets/cover.png')}\r\n        />\r\n      </View>\r\n      <View style={styles.routesContainer}>\r\n        {Routes.map((item) => (\r\n          <DrawerItem\r\n            key={item.name}\r\n            icon={() => (\r\n              <Image\r\n                resizeMode={'contain'}\r\n                style={styles.iconImg}\r\n                source={item.icon}\r\n              />\r\n            )}\r\n            label={item.label}\r\n            onPress={() => {\r\n              navigation.navigate(item.name);\r\n            }}\r\n          />\r\n        ))}\r\n      </View>\r\n      <View style={styles.footer}>\r\n        <View style={styles.footerButtonContainer}>\r\n          <Pressable\r\n            onPress={() => {\r\n              Linking.openURL('https://www.reddit.com/r/GoddessStoryTCG');\r\n            }}\r\n          >\r\n            <Image\r\n              resizeMode={'contain'}\r\n              style={styles.footerButtonImg}\r\n              source={require('../../../../assets/reddit.png')}\r\n            />\r\n          </Pressable>\r\n          <Pressable\r\n            style={styles.footerButtonSpacer}\r\n            onPress={() => {\r\n              Linking.openURL(\r\n                'https://www.facebook.com/groups/goddessstoryandwaifucardnewsupdatesandcollections',\r\n              );\r\n            }}\r\n          >\r\n            <Image\r\n              resizeMode={'contain'}\r\n              style={styles.footerButtonImg}\r\n              source={require('../../../../assets/facebook.png')}\r\n            />\r\n          </Pressable>\r\n          <Pressable\r\n            onPress={() => {\r\n              Linking.openURL('https://discord.gg/waifucard');\r\n            }}\r\n          >\r\n            <Image\r\n              resizeMode={'contain'}\r\n              style={styles.footerButtonImg}\r\n              source={require('../../../../assets/discord.png')}\r\n            />\r\n          </Pressable>\r\n        </View>\r\n        <Text style={styles.footerSubtitle}>{'Waifu Card Community'}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  drawerContentContainer: {\r\n    height: 200,\r\n    overflow: 'hidden',\r\n    position: 'relative',\r\n  },\r\n  drawerContentCoverImage: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    height: 250,\r\n    width: '100%',\r\n  },\r\n  routesContainer: {flex: 1},\r\n  footer: {padding: 15},\r\n  footerButtonContainer: {\r\n    justifyContent: 'center',\r\n    padding: 5,\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    marginTop: 5,\r\n  },\r\n  footerButtonSpacer: {marginHorizontal: 10},\r\n  footerButtonImg: {\r\n    height: 30,\r\n    width: 30,\r\n  },\r\n  footerSubtitle: {\r\n    marginTop: 5,\r\n    textAlign: 'center',\r\n  },\r\n  iconImg: {\r\n    height: 25,\r\n    width: 25,\r\n  },\r\n});\r\nexport default DrawerContent;\r\n","import React from 'react';\r\n\r\nimport {createDrawerNavigator} from '@react-navigation/drawer';\r\nimport {NavigationContainer} from '@react-navigation/native';\r\n\r\nimport Routes, {initialRoute} from '../../../app/navigation/routes';\r\nimport {NavigationParamList} from '../../../app/navigation/types';\r\nimport DrawerContent from './DrawerContent';\r\n\r\nconst Drawer = createDrawerNavigator<NavigationParamList>();\r\n\r\nexport const DrawerNavigation = () => {\r\n  return (\r\n    <NavigationContainer\r\n      documentTitle={{\r\n        formatter: () => `Goddess Story Library`,\r\n      }}\r\n    >\r\n      <Drawer.Navigator\r\n        initialRouteName={initialRoute}\r\n        screenOptions={{\r\n          headerShown: false,\r\n        }}\r\n        drawerContent={(props) => <DrawerContent {...props} />}\r\n      >\r\n        {Routes.map((item) => (\r\n          <Drawer.Screen\r\n            key={item.name}\r\n            name={item.name}\r\n            component={item.component}\r\n          />\r\n        ))}\r\n      </Drawer.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {StyleSheet, View} from 'react-native';\r\n\r\nimport {useNetInfo} from '@react-native-community/netinfo';\r\nimport {Button, Icon, Text} from '@rneui/themed';\r\n\r\nimport {Colors, Icons} from '../app/constants';\r\nimport {useGSL} from '../app/hooks/useGSL';\r\nimport Overlay from './Overlay';\r\n\r\nconst RequireInternet = () => {\r\n  const netInfo = useNetInfo();\r\n  const {isLoading} = useGSL('/data/goddess-story.json');\r\n\r\n  // return (\r\n  //   <View style={styles.skeletonContainer}>\r\n  //     <View style={styles.skeletonHeader}>\r\n  //       {boxSize.width > 0 && (\r\n  //         <Skeleton style={styles.skeleton} height={60} />\r\n  //       )}\r\n  //     </View>\r\n\r\n  //     <View\r\n  //       style={styles.skeletonContent}\r\n  //       onLayout={(event) => {\r\n  //         const {width, height} = event.nativeEvent.layout;\r\n  //         setBoxSize({width: (width - 15) / 2, height: (height - 30) / 3});\r\n  //       }}\r\n  //     >\r\n  //       <View style={styles.skeletonContentRow}>\r\n  //         <View\r\n  //           style={{\r\n  //             width: boxSize.width,\r\n  //             height: boxSize.height,\r\n  //           }}\r\n  //         >\r\n  //           <Skeleton style={styles.skeleton} height={boxSize.height - 40} />\r\n  //           <Skeleton style={styles.skeletonSmall} height={30} />\r\n  //         </View>\r\n  //         <View\r\n  //           style={{\r\n  //             width: boxSize.width,\r\n  //             height: boxSize.height,\r\n  //           }}\r\n  //         >\r\n  //           <Skeleton style={styles.skeleton} height={boxSize.height - 40} />\r\n  //           <Skeleton style={styles.skeletonSmall} height={30} />\r\n  //         </View>\r\n  //       </View>\r\n  //       <View style={styles.skeletonContentRow}>\r\n  //         <View\r\n  //           style={{\r\n  //             width: boxSize.width,\r\n  //             height: boxSize.height,\r\n  //           }}\r\n  //         >\r\n  //           <Skeleton style={styles.skeleton} height={boxSize.height - 40} />\r\n  //           <Skeleton style={styles.skeletonSmall} height={30} />\r\n  //         </View>\r\n  //         <View\r\n  //           style={{\r\n  //             width: boxSize.width,\r\n  //             height: boxSize.height,\r\n  //           }}\r\n  //         >\r\n  //           <Skeleton style={styles.skeleton} height={boxSize.height - 40} />\r\n  //           <Skeleton style={styles.skeletonSmall} height={30} />\r\n  //         </View>\r\n  //       </View>\r\n  //       <View style={styles.skeletonContentRow}>\r\n  //         <View\r\n  //           style={{\r\n  //             width: boxSize.width,\r\n  //             height: boxSize.height,\r\n  //           }}\r\n  //         >\r\n  //           <Skeleton style={styles.skeleton} height={boxSize.height - 40} />\r\n  //           <Skeleton style={styles.skeletonSmall} height={30} />\r\n  //         </View>\r\n  //         <View\r\n  //           style={{\r\n  //             width: boxSize.width,\r\n  //             height: boxSize.height,\r\n  //           }}\r\n  //         >\r\n  //           <Skeleton style={styles.skeleton} height={boxSize.height - 40} />\r\n  //           <Skeleton style={styles.skeletonSmall} height={30} />\r\n  //         </View>\r\n  //       </View>\r\n  //     </View>\r\n  //   </View>\r\n  // );\r\n\r\n  return (\r\n    <>\r\n      <Overlay\r\n        showClose={false}\r\n        isVisible={isLoading || !netInfo.isConnected}\r\n        toggleOverlay={() => {\r\n          console.log('toggleOverlay');\r\n        }}\r\n      >\r\n        <View style={styles.container}>\r\n          {isLoading ? (\r\n            <Button type=\"clear\" loading loadingProps={{size: 25}} />\r\n          ) : (\r\n            <>\r\n              <Icon name={Icons.no_internet} size={50} />\r\n              <Text h4>{'Conection Error'}</Text>\r\n              <Text>{'Please check your network connectivity'}</Text>\r\n              <Text>{'and try again.'}</Text>\r\n            </>\r\n          )}\r\n        </View>\r\n      </Overlay>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: Colors.background,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  //   skeletonContainer: {\r\n  //     padding: 15,\r\n  //     flex: 1,\r\n  //   },\r\n  //   skeletonHeader: {height: 60},\r\n  //   skeletonContent: {\r\n  //     flex: 1,\r\n  //     marginTop: 15,\r\n  //     overflow: 'hidden',\r\n  //   },\r\n  //   skeletonContentRow: {\r\n  //     flexDirection: 'row',\r\n  //     justifyContent: 'space-between',\r\n  //     marginBottom: 15,\r\n  //   },\r\n  //   skeleton: {\r\n  //     borderRadius: 10,\r\n  //     opacity: 0.3,\r\n  //   },\r\n  //   skeletonSmall: {\r\n  //     borderRadius: 5,\r\n  //     marginTop: 10,\r\n  //     opacity: 0.3,\r\n  //   },\r\n});\r\nexport default RequireInternet;\r\n","import React, {useState} from 'react';\r\nimport {StyleSheet, useWindowDimensions, View} from 'react-native';\r\n\r\nimport {Button, Icon, Text} from '@rneui/themed';\r\n\r\nimport {Colors, Icons, Sizes} from '../app/constants';\r\nimport {isMobileWebBrowser} from '../app/utils/isMobileWebBrowser';\r\n\r\ninterface WrapperProps {\r\n  children: JSX.Element | JSX.Element[];\r\n}\r\nconst Wrapper = ({children}: WrapperProps) => {\r\n  const {width} = useWindowDimensions();\r\n  const defaultFooterState = localStorage.getItem('defaultFooterState');\r\n  const [hideFooter, setHideFooter] = useState(defaultFooterState === 'hidden');\r\n\r\n  if (isMobileWebBrowser() || width <= Sizes.sm) {\r\n    return <>{children}</>;\r\n  }\r\n  // if (isMobileWebBrowser()) return children;\r\n  const handleHideFooter = () => {\r\n    localStorage.setItem('defaultFooterState', 'hidden');\r\n    setHideFooter(true);\r\n  };\r\n  return (\r\n    <>\r\n      {children}\r\n      {!hideFooter && (\r\n        <View style={styles.footer}>\r\n          <Button\r\n            containerStyle={{position: 'absolute', right: 0, top: 0}}\r\n            type=\"clear\"\r\n            onPress={handleHideFooter}\r\n          >\r\n            <Icon name={Icons.close} color=\"white\" />\r\n          </Button>\r\n          <Text style={styles.footerText}>\r\n            {'For best experience, download the app'}\r\n          </Text>\r\n          <Button\r\n            containerStyle={styles.submitButton}\r\n            onPress={() => {\r\n              window.open(\r\n                'https://drive.google.com/file/d/1jSvF128oKd4pizkIhjIpiZFEoBw7kRCB/view?usp=share_link',\r\n                '_blank',\r\n              );\r\n            }}\r\n          >\r\n            <Icon\r\n              style={styles.buttonIcon}\r\n              name={Icons.download}\r\n              color=\"white\"\r\n            />\r\n            Download (APK)\r\n          </Button>\r\n        </View>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  footer: {\r\n    // position: 'fixed',\r\n    // bottom: 0,\r\n    width: '100%',\r\n    backgroundColor: Colors.black,\r\n    //justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingVertical: '1rem',\r\n  },\r\n  footerText: {\r\n    color: Colors.white,\r\n  },\r\n  submitButton: {\r\n    marginTop: 20,\r\n  },\r\n  buttonIcon: {\r\n    marginRight: 10,\r\n  },\r\n});\r\nexport default Wrapper;\r\n","/* eslint-disable no-useless-escape */\r\nimport {Platform} from 'react-native';\r\n\r\nexport function isMobileWebBrowser() {\r\n  let mobileBrowserDetected = false;\r\n  if (Platform.OS === 'web') {\r\n    (({userAgent} = navigator) => {\r\n      if (\r\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\r\n          userAgent,\r\n        ) ||\r\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\r\n          userAgent.substr(0, 4),\r\n        )\r\n      )\r\n        mobileBrowserDetected = true;\r\n    })();\r\n  }\r\n  return mobileBrowserDetected;\r\n}\r\n","import {StatusBar} from 'expo-status-bar';\r\nimport React from 'react';\r\nimport {LogBox} from 'react-native';\r\nimport {SafeAreaProvider} from 'react-native-safe-area-context';\r\n\r\nimport {createTheme, ThemeProvider} from '@rneui/themed';\r\n\r\nimport {Colors, LightColors} from './src/app/constants';\r\nimport {DrawerNavigation} from './src/components/Navigation';\r\nimport RequireInternet from './src/components/RequireInternet';\r\nimport Wrapper from './src/components/Wrapper';\r\n\r\nconst theme = createTheme({\r\n  lightColors: LightColors,\r\n  mode: 'light',\r\n  components: {\r\n    Header: {\r\n      backgroundColor: Colors.headerBg,\r\n    },\r\n    Icon: {\r\n      color: Colors.black,\r\n      type: 'material-community',\r\n    },\r\n    Overlay: {\r\n      overlayStyle: {\r\n        backgroundColor: Colors.background,\r\n      },\r\n    },\r\n  },\r\n});\r\nconst App = () => {\r\n  LogBox.ignoreAllLogs();\r\n  return (\r\n    <>\r\n      <StatusBar\r\n        backgroundColor={Colors.headerBg}\r\n        translucent={false}\r\n      ></StatusBar>\r\n      <SafeAreaProvider>\r\n        <ThemeProvider theme={theme}>\r\n          <Wrapper>\r\n            <DrawerNavigation />\r\n            <RequireInternet />\r\n          </Wrapper>\r\n        </ThemeProvider>\r\n      </SafeAreaProvider>\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import {registerRootComponent} from 'expo';\r\n\r\nimport App from './App';\r\n\r\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\r\n// It also ensures that whether you load the app in Expo Go or in a native build,\r\n// the environment is set up appropriately\r\nregisterRootComponent(App);\r\n"],"sourceRoot":""}