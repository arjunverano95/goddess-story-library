{"version":3,"sources":["assets/no-image.png","assets/little-frog.png","assets/senpai-goddess-haven.png","assets/cover.png","assets/reddit.png","assets/facebook.png","assets/discord.png","src/app/constants/icons.ts","src/app/constants/sizes.ts","src/app/constants/colors.ts","src/app/services/api.ts","src/app/constants/variables.ts","src/app/hooks/useGSL.ts","src/components/Header.tsx","src/components/SetList/FilterForm/Fields/InputField.tsx","src/components/SetList/FilterForm/Fields/SelectField.tsx","src/components/Overlay.tsx","src/components/SetList/FilterForm/Fields/SearchField.tsx","src/components/SetList/FilterForm/index.tsx","src/components/SetList/FilterBar.tsx","src/components/CardDetails/CardImage.web.tsx","src/components/CardDetails/index.tsx","src/components/SetList/Gallery/GalleryImage.web.tsx","src/components/SetList/Gallery/GalleryItem.tsx","src/components/SetList/Gallery/index.tsx","src/views/GoddessStory.tsx","src/views/SenpaiGoddessHaven.tsx","src/app/navigation/routes/index.ts","src/components/Navigation/DrawerNavigation/DrawerContent.tsx","src/components/Navigation/DrawerNavigation/index.tsx","src/components/RequireInternet.tsx","src/components/Wrapper.web.tsx","src/app/utils/isMobileWebBrowser.ts","App.tsx","index.js"],"names":["module","exports","Icons","Sizes","LightColors","primary","secondary","background","black","white","greyOutline","searchBg","Colors","headerBg","transparent","axios","defaults","baseURL","responseBody","response","data","api","url","config","get","then","useGSL","useSWR","isLoading","cards","setNumbers","set_no","rarities","rarity","series","styles","StyleSheet","create","headerContainer","backgroundColor","flexDirection","toggleDrawerContainer","marginTop","marginHorizontal","toggleDrawerButton","height","headerContentContainer","padding","margin","flex","Header","props","navigation","children","showBackButton","View","style","containerStyle","buttonStyle","type","onPress","goBack","name","color","openDrawer","InputField","label","value","onFocus","onChangeText","listItem","Content","Input","inputField","placeholder","placeholderTextColor","paddingVertical","paddingHorizontal","borderBottomWidth","borderColor","textAlign","SelectField","isExpanded","onSelect","renderItem","useCallback","item","selectListItem","CheckBox","iconType","checkedIcon","uncheckedIcon","checked","Subtitle","Accordion","icon","listItemAccordion","content","formText","selectContainer","selectList","map","paddingLeft","fontSize","Overlay","isVisible","toggleOverlay","showClose","overlayStyle","overlay","fullScreen","onBackdropPress","overlayHeaderContainer","closeOverlayButtonContainer","closeOverlayButton","defaultProps","SearchField","useState","isOverlayVisible","setIsOverlayVisible","searchValue","setSearchValue","theme","useTheme","formattedData","filter","listData","useRef","current","listItemText","lightTheme","searchBarContainer","inputContainerStyle","colors","grey5","toLowerCase","includes","overlayContentContainer","estimatedItemSize","keyExtractor","borderBottomColor","borderTopColor","searchBarInputContainer","formContainer","paddingBottom","formHeader","title","marginLeft","clear","paddingTop","submitButton","FilterForm","onSubmit","formData","expanded","setExpanded","setFormData","handleExpanded","updateFormData","key","size","h3","Pressable","clearData","ID","Code","SetNumber","CardNumber","CharacterName","SeriesName","Rarity","ImageUrl","HasImage","FilterBar","sort","onFilter","onSort","isBSVisible","setIsBSVisible","toggleBottomSheet","titleContainer","filterButtonContainer","headerButton","sortButtonContainer","fontWeight","marginRight","imageContainer","image","resizeMode","width","imageWebview","borderWidth","overflowY","CardImage","Image","source","uri","useEffect","history","pushState","script","document","createElement","head","append","src","remove","className","container","alignItems","cardContainer","maxWidth","cardTitleContainer","rarityBadge","minWidth","raritytext","cardTitle","cardSubTitle","CardDetails","badgeStyle","textStyle","status","Title","Divider","GalleryImage","imageUrl","require","aspectRatio","shadowColor","setNoBadgeContainer","position","top","left","zIndex","cardNoBadgeContainer","right","badge","badgeText","textContent","cardFooter","GalleryItem","Gallery","useWindowDimensions","galleryData","setGalleryData","selectedCard","undefined","galleryColNo","cleanFilter","Object","keys","forEach","filteredData","order","a","b","localeCompare","Number","sortData","galleryContainer","numColumns","Platform","select","web","native","GoddessStory","setFilterData","setSortValue","SenpaiGoddessHaven","Routes","component","drawerContentContainer","overflow","drawerContentCoverImage","bottom","routesContainer","footer","footerButtonContainer","justifyContent","flexWrap","footerButtonSpacer","footerButtonImg","footerSubtitle","iconImg","DrawerContent","DrawerItem","navigate","Linking","openURL","Drawer","createDrawerNavigator","DrawerNavigation","NavigationContainer","documentTitle","formatter","Navigator","initialRouteName","screenOptions","headerShown","drawerContent","Screen","RequireInternet","netInfo","useNetInfo","isConnected","console","log","loading","loadingProps","h4","footerText","buttonIcon","Wrapper","defaultFooterState","localStorage","getItem","hideFooter","setHideFooter","mobileBrowserDetected","OS","navigator","userAgent","test","substr","isMobileWebBrowser","setItem","window","open","createTheme","lightColors","mode","components","Icon","App","LogBox","ignoreAllLogs","StatusBar","translucent","registerRootComponent"],"mappings":"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","file":"static/js/app.cc13b64f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-image.54669752.png\";","module.exports = __webpack_public_path__ + \"static/media/little-frog.d63d2f17.png\";","module.exports = __webpack_public_path__ + \"static/media/senpai-goddess-haven.716e7e5e.png\";","module.exports = __webpack_public_path__ + \"static/media/cover.68176387.png\";","module.exports = __webpack_public_path__ + \"static/media/reddit.32d935bb.png\";","module.exports = __webpack_public_path__ + \"static/media/facebook.822ce2ac.png\";","module.exports = __webpack_public_path__ + \"static/media/discord.575ff213.png\";","export const Icons = {\n  arrow_down: 'chevron-down',\n  arrow_left: 'chevron-left',\n  arrow_right: 'chevron-right',\n  menu: 'menu',\n  record: 'microphone',\n  filter: 'tune',\n  list: 'format-list-bulleted',\n  home: 'home',\n  search: 'magnify',\n  close: 'close',\n  sort_asc: 'sort-alphabetical-ascending',\n  sort_desc: 'sort-alphabetical-descending',\n  no_internet: 'access-point-remove',\n  download: 'cloud-download-outline',\n};\n","export const Sizes = {\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n};\n","export const LightColors = {\n  primary: '#e85d64',\n  secondary: '#f2a4a8',\n  background: '#fffdfd',\n  black: '#43484d',\n  white: '#ffffff',\n  greyOutline: '#bfbfbf',\n  searchBg: '#393e42',\n};\nexport const Colors = {\n  ...LightColors,\n  headerBg: '#393e42',\n  transparent: 'transparent',\n};\n","import axios, {AxiosRequestConfig, AxiosResponse} from 'axios';\n\nimport {GSLBaseUrl} from '../constants';\n\naxios.defaults.baseURL = GSLBaseUrl;\n\nconst responseBody = (response: AxiosResponse) => response.data;\n\nexport const api = {\n  get: (url: string, config?: AxiosRequestConfig) =>\n    axios.get(url, config).then(responseBody),\n  post: (url: string, body: unknown) =>\n    axios.post(url, body).then(responseBody),\n  put: (url: string, body: unknown) => axios.put(url, body).then(responseBody),\n  delete: (url: string) => axios.delete(url).then(responseBody),\n  postForm: (url: string, file: Blob) => {\n    const formData = new FormData();\n    formData.append('File', file);\n    return axios\n      .post(url, formData, {\n        headers: {\n          'Content-type': 'multipart/form-data',\n        },\n      })\n      .then(responseBody);\n  },\n};\n","export const GSLBaseUrl =\n  'https://arjunverano95.github.io/goddess-story-library';\n","import useSWR from 'swr';\n\nimport {GSLCard} from '../../models/GSLCard';\nimport {api} from '../services';\n\nexport const useGSL = (url: string) => {\n  const {data, isLoading} = useSWR<{\n    cards: GSLCard[];\n    set_no: string[];\n    rarity: string[];\n    series: string[];\n  }>(url, api.get);\n\n  return {\n    isLoading,\n    data: data?.cards,\n    setNumbers: data?.set_no,\n    rarities: data?.rarity,\n    series: data?.series,\n  };\n};\n","import React from 'react';\nimport {StyleSheet, View} from 'react-native';\n\nimport {Button, Icon} from '@rneui/themed';\n\nimport {Colors, Icons} from '../app/constants';\nimport {NavigationParamList, NavigationProp} from '../app/navigation/types';\n\ninterface HeaderProps {\n  navigation: NavigationProp<keyof NavigationParamList>;\n  children?: JSX.Element | JSX.Element[];\n  showBackButton?: boolean;\n}\nconst Header = (props: HeaderProps) => {\n  const {navigation, children, showBackButton} = props;\n  return (\n    <View\n      style={[\n        styles.headerContainer,\n        showBackButton ? {backgroundColor: Colors.transparent} : {},\n      ]}\n    >\n      {showBackButton ? (\n        <Button\n          containerStyle={styles.toggleDrawerContainer}\n          buttonStyle={styles.toggleDrawerButton}\n          type=\"clear\"\n          onPress={async () => {\n            navigation.goBack();\n          }}\n        >\n          <Icon name={Icons.arrow_left} color={Colors.black} />\n        </Button>\n      ) : (\n        <Button\n          containerStyle={styles.toggleDrawerContainer}\n          buttonStyle={styles.toggleDrawerButton}\n          type=\"clear\"\n          onPress={async () => {\n            navigation.openDrawer();\n          }}\n        >\n          <Icon name={Icons.menu} color=\"white\" />\n        </Button>\n      )}\n\n      {children && (\n        <View style={styles.headerContentContainer}>{props.children}</View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  headerContainer: {\n    // paddingTop: 50,\n    backgroundColor: Colors.headerBg,\n    flexDirection: 'row',\n  },\n  toggleDrawerContainer: {\n    marginTop: 10,\n    marginHorizontal: 5,\n  },\n  toggleDrawerButton: {\n    height: 46,\n  },\n  headerContentContainer: {\n    padding: 0,\n    margin: 0,\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\nexport default Header;\n","import React from 'react';\nimport {StyleSheet} from 'react-native';\n\nimport {ListItem} from '@rneui/themed';\n\nimport {Colors} from '../../../../app/constants';\n\ninterface InputFieldProps {\n  label: string;\n  value: string;\n  onFocus: () => void;\n  onChangeText: (value: string) => void;\n}\nexport const InputField = (props: InputFieldProps) => {\n  const {label, value, onFocus, onChangeText} = props;\n  return (\n    <ListItem containerStyle={styles.listItem}>\n      <ListItem.Content>\n        <ListItem.Input\n          style={styles.inputField}\n          placeholder={label}\n          placeholderTextColor={Colors.greyOutline}\n          onFocus={onFocus}\n          onChangeText={onChangeText}\n          value={value}\n        />\n      </ListItem.Content>\n    </ListItem>\n  );\n};\nconst styles = StyleSheet.create({\n  listItem: {\n    marginHorizontal: 0,\n    paddingVertical: 5,\n    paddingHorizontal: 0,\n    borderBottomWidth: 1,\n    borderColor: Colors.greyOutline,\n    height: 50,\n  },\n  inputField: {\n    textAlign: 'left',\n    color: Colors.black,\n  },\n});\n","import React, {useCallback} from 'react';\nimport {StyleSheet, View} from 'react-native';\nimport {ScrollView} from 'react-native-gesture-handler';\n\nimport {Icon, ListItem, Text} from '@rneui/themed';\n\nimport {Colors, Icons} from '../../../../app/constants';\n\ninterface SelectFieldProps {\n  value: string;\n  label: string;\n  data: string[];\n  isExpanded: boolean;\n  onPress: () => void;\n  onSelect: (item: string) => void;\n}\nexport const SelectField = (props: SelectFieldProps) => {\n  const {value, label, data, isExpanded, onPress, onSelect} = props;\n  const renderItem = useCallback(\n    ({item}: {item: string}) => {\n      return (\n        <ListItem key={item} containerStyle={styles.selectListItem}>\n          <ListItem.CheckBox\n            // Use ThemeProvider to change the defaults of the checkbox\n            iconType=\"material-community\"\n            checkedIcon=\"checkbox-marked\"\n            uncheckedIcon=\"checkbox-blank-outline\"\n            checked={item === value}\n            onPress={() => {\n              onSelect(item);\n            }}\n          />\n          <ListItem.Content>\n            <ListItem.Subtitle>{item}</ListItem.Subtitle>\n          </ListItem.Content>\n        </ListItem>\n      );\n    },\n    [onSelect],\n  );\n  const SelectList = () => {\n    return <>{data.map((item) => renderItem({item}))}</>;\n  };\n  return (\n    <ListItem.Accordion\n      icon={<Icon name={Icons.arrow_down} />}\n      containerStyle={[styles.listItem, styles.listItemAccordion]}\n      content={\n        <ListItem.Content>\n          <Text style={[styles.formText, !value ? {} : {color: Colors.black}]}>\n            {!value ? label : value}\n          </Text>\n        </ListItem.Content>\n      }\n      isExpanded={isExpanded}\n      onPress={onPress}\n    >\n      <View style={styles.selectContainer}>\n        <ScrollView style={styles.selectList}>\n          <SelectList />\n        </ScrollView>\n      </View>\n    </ListItem.Accordion>\n  );\n};\nconst styles = StyleSheet.create({\n  listItem: {\n    marginHorizontal: 0,\n    paddingVertical: 5,\n    paddingHorizontal: 0,\n    borderBottomWidth: 1,\n    borderColor: Colors.greyOutline,\n    height: 50,\n  },\n  listItemAccordion: {\n    paddingLeft: 10,\n    color: Colors.black,\n  },\n  selectContainer: {\n    borderBottomWidth: 1,\n    borderColor: Colors.greyOutline,\n    height: 200,\n  },\n  selectList: {\n    height: 200,\n  },\n  selectListItem: {\n    paddingVertical: 5,\n  },\n  formText: {fontSize: 18, color: Colors.greyOutline},\n});\n","import React from 'react';\nimport {StyleSheet, View} from 'react-native';\n\nimport {Button, Icon, Overlay as RNEOverlay} from '@rneui/themed';\n\nimport {Colors, Icons} from '../app/constants';\n\ninterface HeaderProps {\n  isVisible: boolean;\n  toggleOverlay: () => void;\n  children: JSX.Element | JSX.Element[];\n  showClose?: boolean;\n}\nconst Overlay = (props: HeaderProps) => {\n  const {children, isVisible, toggleOverlay, showClose} = props;\n  return (\n    <RNEOverlay\n      overlayStyle={styles.overlay}\n      fullScreen={true}\n      isVisible={isVisible}\n      onBackdropPress={toggleOverlay}\n    >\n      {showClose && (\n        <View style={styles.overlayHeaderContainer}>\n          <Button\n            containerStyle={styles.closeOverlayButtonContainer}\n            buttonStyle={styles.closeOverlayButton}\n            type=\"clear\"\n            onPress={() => {\n              toggleOverlay();\n            }}\n          >\n            <Icon name={Icons.close} color={Colors.black} />\n          </Button>\n        </View>\n      )}\n\n      {children && <>{props.children}</>}\n    </RNEOverlay>\n  );\n};\nOverlay.defaultProps = {\n  showClose: true,\n};\nconst styles = StyleSheet.create({\n  overlay: {padding: 0},\n  overlayHeaderContainer: {\n    flexDirection: 'row-reverse',\n  },\n  closeOverlayButtonContainer: {\n    marginTop: 10,\n    marginHorizontal: 5,\n  },\n  closeOverlayButton: {\n    height: 46,\n  },\n});\n\nexport default Overlay;\n","import React, {useCallback, useRef, useState} from 'react';\nimport {StyleSheet} from 'react-native';\nimport {SafeAreaView} from 'react-native-safe-area-context';\n\nimport {Icon, ListItem, SearchBar, Text, useTheme} from '@rneui/themed';\nimport {FlashList} from '@shopify/flash-list';\n\nimport {Colors, Icons} from '../../../../app/constants';\nimport Overlay from '../../../Overlay';\n\ninterface SearchFieldProps {\n  label: string;\n  value: string;\n  data: string[];\n  onPress: () => void;\n  onSelect: (item: string) => void;\n}\nexport const SearchField = (props: SearchFieldProps) => {\n  const {label, value, data, onPress, onSelect} = props;\n  const [isOverlayVisible, setIsOverlayVisible] = useState(false);\n  const [searchValue, setSearchValue] = useState('');\n  const {theme} = useTheme();\n\n  const formattedData = !value\n    ? data\n    : [value, ...data.filter((item) => item !== value)];\n  const listData = useRef(formattedData);\n\n  const toggleOverlay = () => {\n    listData.current = formattedData;\n    setSearchValue('');\n    setIsOverlayVisible(!isOverlayVisible);\n  };\n  const handleSearch = (value: string) => {\n    if (!value) listData.current = formattedData;\n    else\n      listData.current = [\n        ...data.filter((item) => {\n          return `${item}`.toLowerCase().includes(value.toLowerCase());\n        }),\n      ];\n    setSearchValue(value);\n  };\n  const renderItem = useCallback(\n    ({item}: {item: string}) => {\n      return (\n        <ListItem containerStyle={styles.selectListItem}>\n          <ListItem.CheckBox\n            // Use ThemeProvider to change the defaults of the checkbox\n            iconType=\"material-community\"\n            checkedIcon=\"checkbox-marked\"\n            uncheckedIcon=\"checkbox-blank-outline\"\n            checked={item === value}\n            onPress={() => {\n              onSelect(item);\n              toggleOverlay();\n            }}\n          />\n          <ListItem.Content>\n            <ListItem.Subtitle>{item}</ListItem.Subtitle>\n          </ListItem.Content>\n        </ListItem>\n      );\n    },\n    [toggleOverlay],\n  );\n  return (\n    <>\n      <ListItem\n        containerStyle={[styles.listItem, styles.listItemText]}\n        onPress={() => {\n          onPress();\n          toggleOverlay();\n        }}\n      >\n        <ListItem.Content>\n          <Text style={[styles.formText, !value ? {} : {color: Colors.black}]}>\n            {!value ? label : value}\n          </Text>\n        </ListItem.Content>\n        <Icon name={Icons.arrow_right} />\n      </ListItem>\n      <Overlay isVisible={isOverlayVisible} toggleOverlay={toggleOverlay}>\n        <SearchBar\n          lightTheme={true}\n          containerStyle={styles.searchBarContainer}\n          inputContainerStyle={{backgroundColor: theme.colors.grey5}}\n          placeholder={label}\n          onChangeText={handleSearch}\n          value={searchValue}\n        />\n        <SafeAreaView style={styles.overlayContentContainer}>\n          <FlashList\n            data={listData.current}\n            renderItem={renderItem}\n            estimatedItemSize={36}\n            keyExtractor={(item) => item}\n          />\n        </SafeAreaView>\n      </Overlay>\n    </>\n  );\n};\nconst styles = StyleSheet.create({\n  listItem: {\n    marginHorizontal: 0,\n    paddingVertical: 5,\n    paddingHorizontal: 0,\n    borderBottomWidth: 1,\n    borderColor: Colors.greyOutline,\n    height: 50,\n  },\n  formText: {fontSize: 18, color: Colors.greyOutline},\n  listItemText: {\n    paddingLeft: 10,\n    color: Colors.black,\n  },\n\n  overlayContentContainer: {\n    margin: 10,\n    flex: 1,\n  },\n  searchBarContainer: {\n    backgroundColor: Colors.transparent,\n    borderBottomColor: Colors.transparent,\n    borderTopColor: Colors.transparent,\n  },\n  searchBarInputContainer: {\n    backgroundColor: Colors.transparent,\n    borderBottomColor: Colors.transparent,\n    borderTopColor: Colors.transparent,\n  },\n  selectListItem: {\n    paddingVertical: 5,\n  },\n});\n","import React, {useState} from 'react';\nimport {Pressable, StyleSheet, View} from 'react-native';\n\nimport {Button, Icon, Text} from '@rneui/themed';\n\nimport {Colors, Icons} from '../../../app/constants';\nimport {GSLCard} from '../../../models/GSLCard';\nimport {InputField, SearchField, SelectField} from './Fields';\n\ninterface FilterFormProps {\n  data: GSLCard;\n  formData: {setNumbers: string[]; rarities: string[]; series: string[]};\n  onSubmit: (value: GSLCard) => void;\n}\nconst FilterForm = (props: FilterFormProps) => {\n  const {\n    data,\n    onSubmit,\n    formData: {setNumbers, rarities, series},\n  } = props;\n  const [expanded, setExpanded] = useState('');\n  const [formData, setFormData] = useState<GSLCard>({...data});\n\n  const handleExpanded = (value?: string) => {\n    if (!value || expanded === value) setExpanded(null);\n    else setExpanded(value);\n  };\n  const updateFormData = (key: string, value: string) => {\n    if (formData[key] === value) setFormData({...formData, ...{[key]: ''}});\n    else setFormData({...formData, ...{[key]: value}});\n  };\n  return (\n    <>\n      <View style={styles.formContainer}>\n        <View style={styles.formHeader}>\n          <Icon name={Icons.filter} size={45} />\n          <Text h3 style={styles.title}>\n            {'Filter'}\n          </Text>\n          <Pressable\n            style={styles.clear}\n            onPress={() => {\n              const clearData: GSLCard = {\n                ID: '',\n                Code: '',\n                SetNumber: '',\n                CardNumber: '',\n                CharacterName: '',\n                SeriesName: '',\n                Rarity: '',\n                ImageUrl: '',\n                HasImage: '',\n              };\n              setFormData(clearData);\n              handleExpanded();\n              onSubmit(clearData);\n            }}\n          >\n            <Text>{'Reset'}</Text>\n          </Pressable>\n        </View>\n        <SelectField\n          label={'Set'}\n          value={formData.SetNumber}\n          data={setNumbers}\n          isExpanded={expanded === 'SetNumber'}\n          onPress={() => {\n            handleExpanded('SetNumber');\n          }}\n          onSelect={(item) => {\n            updateFormData('SetNumber', item);\n            handleExpanded('SetNumber');\n          }}\n        />\n        <InputField\n          label={'Card No.'}\n          onFocus={() => {\n            handleExpanded();\n          }}\n          onChangeText={(value) => {\n            updateFormData('CardNumber', value);\n          }}\n          value={formData.CardNumber}\n        />\n\n        <SelectField\n          label={'Rarity'}\n          value={formData.Rarity}\n          data={rarities}\n          isExpanded={expanded === 'Rarity'}\n          onPress={() => {\n            handleExpanded('Rarity');\n          }}\n          onSelect={(item) => {\n            updateFormData('Rarity', item);\n            handleExpanded('Rarity');\n          }}\n        />\n        <InputField\n          label={'Character'}\n          onFocus={() => {\n            handleExpanded();\n          }}\n          onChangeText={(value) => {\n            updateFormData('CharacterName', value);\n          }}\n          value={formData.CharacterName}\n        />\n        <SearchField\n          value={formData.SeriesName}\n          label={'Series'}\n          data={series}\n          onPress={() => {\n            handleExpanded();\n          }}\n          onSelect={(item) => {\n            updateFormData('SeriesName', item);\n          }}\n        />\n\n        <Button\n          containerStyle={styles.submitButton}\n          title={'Submit'}\n          onPress={() => {\n            handleExpanded();\n            onSubmit(formData);\n          }}\n        />\n      </View>\n    </>\n  );\n};\nconst styles = StyleSheet.create({\n  formContainer: {\n    backgroundColor: Colors.background,\n    paddingHorizontal: 25,\n    paddingBottom: 25,\n  },\n  formHeader: {flexDirection: 'row', paddingVertical: 25},\n  title: {marginLeft: 10, flex: 1},\n  clear: {\n    paddingTop: 12,\n    paddingHorizontal: 10,\n  },\n  submitButton: {\n    marginTop: 20,\n  },\n});\n\nexport default FilterForm;\n","import React, {useState} from 'react';\nimport {StyleSheet, View} from 'react-native';\n\nimport {BottomSheet, Button, Icon, Text} from '@rneui/themed';\n\nimport {Colors, Icons} from '../../app/constants';\nimport {GSLCard} from '../../models/GSLCard';\nimport FilterForm from './FilterForm';\n\ninterface FilterBarProps {\n  title: string;\n  filter: GSLCard;\n  formData: {setNumbers: string[]; rarities: string[]; series: string[]};\n  sort: 'asc' | 'desc';\n  onFilter: (value: GSLCard) => void;\n  onSort: (value: 'asc' | 'desc') => void;\n}\n\nexport const FilterBar = (props: FilterBarProps) => {\n  const {title, filter, formData, sort, onFilter, onSort} = props;\n  const [isBSVisible, setIsBSVisible] = useState(false);\n\n  const toggleBottomSheet = () => {\n    setIsBSVisible(!isBSVisible);\n  };\n  return (\n    <>\n      <View style={styles.titleContainer}>\n        <Text style={styles.title}>\n          {!filter.SetNumber ? title : filter.SetNumber}\n        </Text>\n      </View>\n      <Button\n        containerStyle={styles.filterButtonContainer}\n        buttonStyle={styles.headerButton}\n        type=\"clear\"\n        onPress={async () => {\n          setIsBSVisible(true);\n        }}\n      >\n        <Icon name={Icons.filter} color=\"white\" />\n      </Button>\n      <Button\n        containerStyle={styles.sortButtonContainer}\n        buttonStyle={styles.headerButton}\n        type=\"clear\"\n        onPress={async () => {\n          onSort(sort === 'asc' ? 'desc' : 'asc');\n        }}\n      >\n        <Icon\n          name={sort === 'asc' ? Icons.sort_asc : Icons.sort_desc}\n          color=\"white\"\n        />\n      </Button>\n      <BottomSheet\n        onBackdropPress={() => {\n          toggleBottomSheet();\n        }}\n        isVisible={isBSVisible}\n      >\n        <FilterForm\n          data={filter}\n          formData={formData}\n          onSubmit={(data) => {\n            onFilter(data);\n            toggleBottomSheet();\n          }}\n        />\n      </BottomSheet>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  titleContainer: {\n    flex: 1,\n    paddingLeft: 10,\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginTop: 19,\n    color: Colors.white,\n  },\n  filterButtonContainer: {\n    marginTop: 10,\n  },\n  sortButtonContainer: {\n    marginTop: 10,\n    marginRight: 8,\n  },\n  headerButton: {\n    height: 46,\n  },\n});\n","import React, {useEffect} from 'react';\nimport {Image, StyleSheet, View} from 'react-native';\n\nimport {Colors} from '../../app/constants';\nimport {GSLCard} from '../../models/GSLCard';\n\ninterface CardImageProps {\n  data: GSLCard;\n}\n\nconst CardImage = (props: CardImageProps) => {\n  const {data} = props;\n\n  if (data.ImageUrl)\n    return (\n      <View style={styles.imageContainer}>\n        <Image\n          style={styles.image}\n          source={{\n            uri: data.ImageUrl,\n          }}\n          resizeMode={'contain'}\n        />\n      </View>\n    );\n  else {\n    useEffect(() => {\n      history.pushState(\n        null,\n        '',\n        `#gsc.tab=1&gsc.q=${data.SeriesName} ${data.CharacterName}`,\n      );\n      const script = document.createElement('script');\n      document.head.append(script);\n      script.src = `https://cse.google.com/cse.js?cx=64bb5bd8971ac4f24`;\n\n      return () => {\n        script.remove();\n      };\n    }, []);\n    return (\n      <>\n        <View style={styles.imageWebview}>\n          <div className=\"gcse-searchresults-only\"></div>\n        </View>\n      </>\n    );\n  }\n};\nconst styles = StyleSheet.create({\n  imageContainer: {\n    flex: 1,\n    margin: 15,\n    backgroundColor: Colors.white,\n  },\n  image: {\n    flex: 1,\n    height: null,\n    resizeMode: 'contain',\n    width: null,\n  },\n  imageWebview: {\n    flex: 1,\n    margin: 20,\n    backgroundColor: Colors.white,\n    borderWidth: 0,\n    overflowY: 'auto',\n  },\n});\nexport default CardImage;\n","import React from 'react';\nimport {StyleSheet, View} from 'react-native';\n\nimport {Badge, Card, Text} from '@rneui/themed';\n\nimport {Colors, Sizes} from '../../app/constants';\nimport {GSLCard} from '../../models/GSLCard';\nimport CardImage from './CardImage';\n\ninterface CardDetailsProps {\n  data: GSLCard;\n}\n\nconst CardDetails = (props: CardDetailsProps) => {\n  const {data} = props;\n\n  if (!data) return <></>;\n\n  return (\n    <>\n      <View style={styles.container}>\n        <Card containerStyle={styles.cardContainer}>\n          <View style={styles.cardTitleContainer}>\n            <Badge\n              badgeStyle={styles.rarityBadge}\n              textStyle={styles.raritytext}\n              value={data.Rarity}\n              status=\"warning\"\n            />\n            <Card.Title\n              style={styles.cardTitle}\n            >{`${data.CharacterName}`}</Card.Title>\n            <Card.Title style={styles.cardSubTitle}>\n              {data.SetNumber}\n            </Card.Title>\n          </View>\n          <Card.Divider />\n          <View>\n            <Text>{`Series: ${data.SeriesName}`}</Text>\n            <Text>{`ID: ${data.ID}`}</Text>\n            {/* <Text>{`Character Name: ${data.CharacterName}`}</Text> */}\n            {/* <Text>{`Rarity: ${data.Rarity}`}</Text> */}\n          </View>\n        </Card>\n        <View style={styles.imageContainer}>\n          <CardImage data={data} />\n        </View>\n      </View>\n    </>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {alignItems: 'center', paddingHorizontal: 10, flex: 1},\n  cardContainer: {\n    borderWidth: 0,\n    backgroundColor: Colors.white,\n    marginTop: 10,\n    width: '100%',\n    maxWidth: Sizes.sm,\n  },\n  cardTitleContainer: {flexDirection: 'row'},\n  rarityBadge: {\n    height: 22,\n    minWidth: 45,\n    paddingHorizontal: 5,\n    marginRight: 5,\n  },\n  raritytext: {fontWeight: 'bold'}, // alignSelf: 'flex-start'}\n  cardTitle: {flex: 1, textAlign: 'left'},\n  cardSubTitle: {fontWeight: 'normal'},\n  imageContainer: {\n    width: '100%',\n    maxWidth: Sizes.sm,\n    flex: 1,\n  },\n});\nexport default CardDetails;\n","import React from 'react';\nimport {Image, ImageStyle, StyleProp, ViewStyle} from 'react-native';\n\ninterface GalleryImageProps {\n  imageUrl?: string;\n  style: StyleProp<ImageStyle>;\n  containerStyle?: StyleProp<ViewStyle>;\n}\n\nconst GalleryImage = (props: GalleryImageProps) => {\n  return (\n    <Image\n      style={props.style}\n      source={\n        !props.imageUrl\n          ? require('../../../../assets/no-image.png')\n          : {\n              uri: props.imageUrl,\n            }\n      }\n      resizeMode={'cover'}\n    />\n  );\n};\n\nexport default GalleryImage;\n","import React from 'react';\nimport {Pressable, StyleSheet, View} from 'react-native';\n\nimport {Badge, Card, Text} from '@rneui/themed';\n\nimport {Colors} from '../../../app/constants';\nimport {GSLCard} from '../../../models/GSLCard';\nimport GalleryImage from './GalleryImage';\n\ninterface GalleryItemProps {\n  data: GSLCard;\n  onPress: (value: GSLCard) => void;\n}\nconst GalleryItem = (props: GalleryItemProps) => {\n  const {data, onPress} = props;\n  return (\n    <Card containerStyle={styles.cardContainer}>\n      <Pressable\n        onPress={() => {\n          onPress(data);\n        }}\n      >\n        <View>\n          <Badge\n            containerStyle={styles.setNoBadgeContainer}\n            badgeStyle={styles.badge}\n            textStyle={styles.badgeText}\n            value={data.SetNumber}\n            status=\"warning\"\n          />\n          <Badge\n            containerStyle={styles.cardNoBadgeContainer}\n            badgeStyle={styles.badge}\n            textStyle={styles.badgeText}\n            value={data.CardNumber}\n            status=\"success\"\n          />\n          <GalleryImage style={styles.image} imageUrl={data.ImageUrl} />\n        </View>\n        <View style={styles.cardFooter}>\n          <View style={styles.cardTitleContainer}>\n            <Text style={styles.cardTitle}>{`${data.CharacterName}`}</Text>\n            <Text style={styles.cardSubTitle}>{data.Rarity}</Text>\n          </View>\n          <View>\n            <Text style={styles.textContent}>{data.SeriesName}</Text>\n          </View>\n        </View>\n      </Pressable>\n    </Card>\n  );\n};\nconst styles = StyleSheet.create({\n  image: {\n    aspectRatio: 1,\n    width: '100%',\n    flex: 1,\n  },\n  cardContainer: {\n    borderWidth: 0,\n    shadowColor: Colors.transparent,\n    // maxWidth: '50%',\n    flex: 1,\n    margin: 0,\n    paddingHorizontal: 5,\n    paddingTop: 10,\n    paddingBottom: 0,\n  },\n  cardTitleContainer: {flexDirection: 'row'},\n  setNoBadgeContainer: {\n    position: 'absolute',\n    top: 5,\n    left: 10,\n    zIndex: 999,\n  },\n  cardNoBadgeContainer: {\n    position: 'absolute',\n    top: 5,\n    right: 5,\n    zIndex: 999,\n  },\n  badge: {\n    height: 20,\n    minWidth: 40,\n    paddingHorizontal: 1,\n    marginRight: 5,\n    fontSize: 9,\n  },\n  badgeText: {fontWeight: 'bold'}, // alignSelf: 'flex-start'}\n  cardTitle: {flex: 1, textAlign: 'left', fontSize: 12},\n  cardSubTitle: {textAlign: 'right', fontSize: 12, fontWeight: 'bold'},\n  textContent: {fontSize: 11, color: Colors.greyOutline},\n  cardFooter: {paddingHorizontal: 8, paddingVertical: 3},\n});\nexport default GalleryItem;\n","import React, {useEffect, useRef, useState} from 'react';\nimport {Platform, StyleSheet, useWindowDimensions} from 'react-native';\nimport {SafeAreaView} from 'react-native-safe-area-context';\n\nimport {FlashList} from '@shopify/flash-list';\n\nimport {Colors, Sizes} from '../../../app/constants';\nimport {GSLCard} from '../../../models/GSLCard';\nimport CardDetails from '../../CardDetails';\nimport Overlay from '../../Overlay';\nimport GalleryItem from './GalleryItem';\n\ninterface GalleryProps {\n  data: GSLCard[];\n  filter: GSLCard;\n  sort: 'asc' | 'desc';\n}\n\nexport const Gallery = (props: GalleryProps) => {\n  const {width} = useWindowDimensions();\n  const {data, filter, sort} = props;\n  const [galleryData, setGalleryData] = useState<GSLCard[]>([]);\n  const [isOverlayVisible, setIsOverlayVisible] = useState(false);\n  const selectedCard = useRef<GSLCard>(undefined);\n  let galleryColNo = 2;\n\n  if (width < Sizes.sm) {\n    galleryColNo = 2;\n  } else if (width >= Sizes.sm && width < Sizes.md) {\n    galleryColNo = 3;\n  } else if (width >= Sizes.md && width < Sizes.lg) {\n    galleryColNo = 5;\n  } else {\n    galleryColNo = 6;\n  }\n\n  const toggleOverlay = () => {\n    setIsOverlayVisible(!isOverlayVisible);\n  };\n  useEffect(() => {\n    if (data) {\n      const cleanFilter = {...filter};\n      Object.keys(cleanFilter).forEach((key) => {\n        if (!cleanFilter[key]) {\n          delete cleanFilter[key];\n        }\n      });\n      const sortData = (data: GSLCard[], order: 'asc' | 'desc') => {\n        if (order === 'asc') {\n          return data.sort(\n            (a, b) =>\n              a.SetNumber.localeCompare(b.SetNumber) ||\n              b.Rarity.localeCompare(a.Rarity) ||\n              Number(a.CardNumber) - Number(b.CardNumber),\n          );\n        } else {\n          return data.sort(\n            (a, b) =>\n              a.SetNumber.localeCompare(b.SetNumber) ||\n              b.Rarity.localeCompare(a.Rarity) ||\n              Number(b.CardNumber) - Number(a.CardNumber),\n          );\n        }\n      };\n\n      const filteredData = data.filter((item) => {\n        for (const key in cleanFilter) {\n          if (cleanFilter[key]) {\n            if (key === 'CharacterName') {\n              if (\n                !item[key]\n                  .toLowerCase()\n                  .includes(cleanFilter[key].toLowerCase())\n              )\n                return false;\n            } else if (item[key] != cleanFilter[key]) return false;\n          }\n        }\n        return true;\n      });\n      setGalleryData(sortData(filteredData, sort));\n    }\n  }, [data, filter, sort]);\n  return (\n    <>\n      <SafeAreaView style={styles.galleryContainer}>\n        <FlashList\n          data={galleryData}\n          numColumns={galleryColNo}\n          keyExtractor={(item) => item.Code}\n          estimatedItemSize={248}\n          renderItem={({item}) => (\n            <GalleryItem\n              data={item}\n              onPress={(item) => {\n                selectedCard.current = item;\n                toggleOverlay();\n              }}\n            />\n          )}\n        />\n      </SafeAreaView>\n      <Overlay isVisible={isOverlayVisible} toggleOverlay={toggleOverlay}>\n        {selectedCard && <CardDetails data={selectedCard.current} />}\n      </Overlay>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  galleryContainer: {\n    flex: 1,\n    paddingBottom: Platform.select({web: 0, native: 10}),\n    backgroundColor: Colors.background,\n  },\n});\n","import React, {useState} from 'react';\n\nimport {useGSL} from '../app/hooks/useGSL';\nimport {ScreenProps} from '../app/navigation/types';\nimport Header from '../components/Header';\nimport {FilterBar, Gallery} from '../components/SetList';\nimport {GSLCard} from '../models/GSLCard';\n\nconst GoddessStory = (props: ScreenProps<'GoddessStory'>) => {\n  const {navigation} = props;\n  const {data, setNumbers, rarities, series} = useGSL(\n    '/data/goddess-story.json',\n  );\n\n  const [filter, setFilterData] = useState<GSLCard>({\n    ID: '',\n    Code: '',\n    SetNumber: '',\n    CardNumber: '',\n    CharacterName: '',\n    SeriesName: '',\n    Rarity: '',\n    ImageUrl: '',\n    HasImage: '',\n  });\n  const [sort, setSortValue] = useState<'asc' | 'desc'>('asc');\n  const onFilter = (value: GSLCard) => {\n    setFilterData(value);\n  };\n\n  return (\n    <>\n      <Header navigation={navigation}>\n        <FilterBar\n          title={'Goddess Story'}\n          sort={sort}\n          filter={filter}\n          formData={{setNumbers, rarities, series}}\n          onFilter={onFilter}\n          onSort={(value) => {\n            setSortValue(value);\n          }}\n        />\n      </Header>\n\n      <Gallery data={data} filter={filter} sort={sort} />\n    </>\n  );\n};\n\nexport default GoddessStory;\n","import React, {useState} from 'react';\n\nimport {useGSL} from '../app/hooks/useGSL';\nimport {ScreenProps} from '../app/navigation/types';\nimport Header from '../components/Header';\nimport {FilterBar, Gallery} from '../components/SetList';\nimport {GSLCard} from '../models/GSLCard';\n\nconst SenpaiGoddessHaven = (props: ScreenProps<'SenpaiGoddessHaven'>) => {\n  const {navigation} = props;\n  const {data, setNumbers, rarities, series} = useGSL(\n    '/data/senpai-goddess-haven.json',\n  );\n\n  const [filter, setFilterData] = useState<GSLCard>({\n    ID: '',\n    Code: '',\n    SetNumber: '',\n    CardNumber: '',\n    CharacterName: '',\n    SeriesName: '',\n    Rarity: '',\n    ImageUrl: '',\n    HasImage: '',\n  });\n  const [sort, setSortValue] = useState<'asc' | 'desc'>('asc');\n  const onFilter = (value: GSLCard) => {\n    setFilterData(value);\n  };\n\n  return (\n    <>\n      <Header navigation={navigation}>\n        <FilterBar\n          title={'Senpai Goddess Haven'}\n          sort={sort}\n          filter={filter}\n          formData={{setNumbers, rarities, series}}\n          onFilter={onFilter}\n          onSort={(value) => {\n            setSortValue(value);\n          }}\n        />\n      </Header>\n\n      <Gallery data={data} filter={filter} sort={sort} />\n    </>\n  );\n};\n\nexport default SenpaiGoddessHaven;\n","import GoddessStory from '../../../views/GoddessStory';\nimport SenpaiGoddessHaven from '../../../views/SenpaiGoddessHaven';\nimport {NavigationParamList, ScreenProps} from '../types';\n\ninterface Routes {\n  name: keyof NavigationParamList;\n  label: string;\n  icon: number;\n  component: (props: ScreenProps<keyof NavigationParamList>) => JSX.Element;\n}\n\nconst Routes: Routes[] = [\n  {\n    name: 'GoddessStory',\n    label: 'Goddess Story',\n    icon: require('../../../../assets/little-frog.png'),\n    component: GoddessStory,\n  },\n  {\n    name: 'SenpaiGoddessHaven',\n    label: 'Senpai Goddess Haven',\n    icon: require('../../../../assets/senpai-goddess-haven.png'),\n    component: SenpaiGoddessHaven,\n  },\n];\nexport const initialRoute: keyof NavigationParamList = 'GoddessStory';\nexport default Routes;\n","import React from 'react';\nimport {Image, Linking, Pressable, StyleSheet, View} from 'react-native';\n\nimport {\n  DrawerContentComponentProps,\n  DrawerItem,\n} from '@react-navigation/drawer';\nimport {Text} from '@rneui/themed';\n\nimport Routes from '../../../app/navigation/routes';\n\nconst DrawerContent = (props: DrawerContentComponentProps) => {\n  const {navigation} = props;\n  return (\n    <View style={{flex: 1}}>\n      <View style={styles.drawerContentContainer}>\n        <Image\n          style={styles.drawerContentCoverImage}\n          source={require('../../../../assets/cover.png')}\n        />\n      </View>\n      <View style={styles.routesContainer}>\n        {Routes.map((item) => (\n          <DrawerItem\n            key={item.name}\n            icon={() => (\n              <Image\n                resizeMode={'contain'}\n                style={styles.iconImg}\n                source={item.icon}\n              />\n            )}\n            label={item.label}\n            onPress={() => {\n              navigation.navigate(item.name);\n            }}\n          />\n        ))}\n      </View>\n      <View style={styles.footer}>\n        <View style={styles.footerButtonContainer}>\n          <Pressable\n            onPress={() => {\n              Linking.openURL('https://www.reddit.com/r/GoddessStoryTCG');\n            }}\n          >\n            <Image\n              resizeMode={'contain'}\n              style={styles.footerButtonImg}\n              source={require('../../../../assets/reddit.png')}\n            />\n          </Pressable>\n          <Pressable\n            style={styles.footerButtonSpacer}\n            onPress={() => {\n              Linking.openURL(\n                'https://www.facebook.com/groups/goddessstoryandwaifucardnewsupdatesandcollections',\n              );\n            }}\n          >\n            <Image\n              resizeMode={'contain'}\n              style={styles.footerButtonImg}\n              source={require('../../../../assets/facebook.png')}\n            />\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              Linking.openURL('https://discord.gg/waifucard');\n            }}\n          >\n            <Image\n              resizeMode={'contain'}\n              style={styles.footerButtonImg}\n              source={require('../../../../assets/discord.png')}\n            />\n          </Pressable>\n        </View>\n        <Text style={styles.footerSubtitle}>{'Waifu Card Community'}</Text>\n      </View>\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  drawerContentContainer: {\n    height: 200,\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  drawerContentCoverImage: {\n    position: 'absolute',\n    bottom: 0,\n    height: 250,\n    width: '100%',\n  },\n  routesContainer: {flex: 1},\n  footer: {padding: 15},\n  footerButtonContainer: {\n    justifyContent: 'center',\n    padding: 5,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 5,\n  },\n  footerButtonSpacer: {marginHorizontal: 10},\n  footerButtonImg: {\n    height: 30,\n    width: 30,\n  },\n  footerSubtitle: {\n    marginTop: 5,\n    textAlign: 'center',\n  },\n  iconImg: {\n    height: 25,\n    width: 25,\n  },\n});\nexport default DrawerContent;\n","import React from 'react';\n\nimport {createDrawerNavigator} from '@react-navigation/drawer';\nimport {NavigationContainer} from '@react-navigation/native';\n\nimport Routes, {initialRoute} from '../../../app/navigation/routes';\nimport {NavigationParamList} from '../../../app/navigation/types';\nimport DrawerContent from './DrawerContent';\n\nconst Drawer = createDrawerNavigator<NavigationParamList>();\n\nexport const DrawerNavigation = () => {\n  return (\n    <NavigationContainer\n      documentTitle={{\n        formatter: () => `Goddess Story Library`,\n      }}\n    >\n      <Drawer.Navigator\n        initialRouteName={initialRoute}\n        screenOptions={{\n          headerShown: false,\n        }}\n        drawerContent={(props) => <DrawerContent {...props} />}\n      >\n        {Routes.map((item) => (\n          <Drawer.Screen\n            key={item.name}\n            name={item.name}\n            component={item.component}\n          />\n        ))}\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n};\n","import React from 'react';\nimport {StyleSheet, View} from 'react-native';\n\nimport {useNetInfo} from '@react-native-community/netinfo';\nimport {Button, Icon, Text} from '@rneui/themed';\n\nimport {Colors, Icons} from '../app/constants';\nimport {useGSL} from '../app/hooks/useGSL';\nimport Overlay from './Overlay';\n\nconst RequireInternet = () => {\n  const netInfo = useNetInfo();\n  const {isLoading} = useGSL('/data/goddess-story.json');\n\n  // return (\n  //   <View style={styles.skeletonContainer}>\n  //     <View style={styles.skeletonHeader}>\n  //       {boxSize.width > 0 && (\n  //         <Skeleton style={styles.skeleton} height={60} />\n  //       )}\n  //     </View>\n\n  //     <View\n  //       style={styles.skeletonContent}\n  //       onLayout={(event) => {\n  //         const {width, height} = event.nativeEvent.layout;\n  //         setBoxSize({width: (width - 15) / 2, height: (height - 30) / 3});\n  //       }}\n  //     >\n  //       <View style={styles.skeletonContentRow}>\n  //         <View\n  //           style={{\n  //             width: boxSize.width,\n  //             height: boxSize.height,\n  //           }}\n  //         >\n  //           <Skeleton style={styles.skeleton} height={boxSize.height - 40} />\n  //           <Skeleton style={styles.skeletonSmall} height={30} />\n  //         </View>\n  //         <View\n  //           style={{\n  //             width: boxSize.width,\n  //             height: boxSize.height,\n  //           }}\n  //         >\n  //           <Skeleton style={styles.skeleton} height={boxSize.height - 40} />\n  //           <Skeleton style={styles.skeletonSmall} height={30} />\n  //         </View>\n  //       </View>\n  //       <View style={styles.skeletonContentRow}>\n  //         <View\n  //           style={{\n  //             width: boxSize.width,\n  //             height: boxSize.height,\n  //           }}\n  //         >\n  //           <Skeleton style={styles.skeleton} height={boxSize.height - 40} />\n  //           <Skeleton style={styles.skeletonSmall} height={30} />\n  //         </View>\n  //         <View\n  //           style={{\n  //             width: boxSize.width,\n  //             height: boxSize.height,\n  //           }}\n  //         >\n  //           <Skeleton style={styles.skeleton} height={boxSize.height - 40} />\n  //           <Skeleton style={styles.skeletonSmall} height={30} />\n  //         </View>\n  //       </View>\n  //       <View style={styles.skeletonContentRow}>\n  //         <View\n  //           style={{\n  //             width: boxSize.width,\n  //             height: boxSize.height,\n  //           }}\n  //         >\n  //           <Skeleton style={styles.skeleton} height={boxSize.height - 40} />\n  //           <Skeleton style={styles.skeletonSmall} height={30} />\n  //         </View>\n  //         <View\n  //           style={{\n  //             width: boxSize.width,\n  //             height: boxSize.height,\n  //           }}\n  //         >\n  //           <Skeleton style={styles.skeleton} height={boxSize.height - 40} />\n  //           <Skeleton style={styles.skeletonSmall} height={30} />\n  //         </View>\n  //       </View>\n  //     </View>\n  //   </View>\n  // );\n\n  return (\n    <>\n      <Overlay\n        showClose={false}\n        isVisible={isLoading || !netInfo.isConnected}\n        toggleOverlay={() => {\n          console.log('toggleOverlay');\n        }}\n      >\n        <View style={styles.container}>\n          {isLoading ? (\n            <Button type=\"clear\" loading loadingProps={{size: 25}} />\n          ) : (\n            <>\n              <Icon name={Icons.no_internet} size={50} />\n              <Text h4>{'Conection Error'}</Text>\n              <Text>{'Please check your network connectivity'}</Text>\n              <Text>{'and try again.'}</Text>\n            </>\n          )}\n        </View>\n      </Overlay>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.background,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  //   skeletonContainer: {\n  //     padding: 15,\n  //     flex: 1,\n  //   },\n  //   skeletonHeader: {height: 60},\n  //   skeletonContent: {\n  //     flex: 1,\n  //     marginTop: 15,\n  //     overflow: 'hidden',\n  //   },\n  //   skeletonContentRow: {\n  //     flexDirection: 'row',\n  //     justifyContent: 'space-between',\n  //     marginBottom: 15,\n  //   },\n  //   skeleton: {\n  //     borderRadius: 10,\n  //     opacity: 0.3,\n  //   },\n  //   skeletonSmall: {\n  //     borderRadius: 5,\n  //     marginTop: 10,\n  //     opacity: 0.3,\n  //   },\n});\nexport default RequireInternet;\n","import React, {useState} from 'react';\nimport {StyleSheet, useWindowDimensions, View} from 'react-native';\n\nimport {Button, Icon, Text} from '@rneui/themed';\n\nimport {Colors, Icons, Sizes} from '../app/constants';\nimport {isMobileWebBrowser} from '../app/utils/isMobileWebBrowser';\n\ninterface WrapperProps {\n  children: JSX.Element | JSX.Element[];\n}\nconst Wrapper = ({children}: WrapperProps) => {\n  const {width} = useWindowDimensions();\n  const defaultFooterState = localStorage.getItem('defaultFooterState');\n  const [hideFooter, setHideFooter] = useState(defaultFooterState === 'hidden');\n\n  if (isMobileWebBrowser() || width <= Sizes.sm) {\n    return <>{children}</>;\n  }\n  // if (isMobileWebBrowser()) return children;\n  const handleHideFooter = () => {\n    localStorage.setItem('defaultFooterState', 'hidden');\n    setHideFooter(true);\n  };\n  return (\n    <>\n      {children}\n      {!hideFooter && (\n        <View style={styles.footer}>\n          <Button\n            containerStyle={{position: 'absolute', right: 0, top: 0}}\n            type=\"clear\"\n            onPress={handleHideFooter}\n          >\n            <Icon name={Icons.close} color=\"white\" />\n          </Button>\n          <Text style={styles.footerText}>\n            {'For best experience, download the app'}\n          </Text>\n          <Button\n            containerStyle={styles.submitButton}\n            onPress={() => {\n              window.open(\n                'https://drive.google.com/file/d/1jSvF128oKd4pizkIhjIpiZFEoBw7kRCB/view?usp=share_link',\n                '_blank',\n              );\n            }}\n          >\n            <Icon\n              style={styles.buttonIcon}\n              name={Icons.download}\n              color=\"white\"\n            />\n            Download (APK)\n          </Button>\n        </View>\n      )}\n    </>\n  );\n};\nconst styles = StyleSheet.create({\n  footer: {\n    // position: 'fixed',\n    // bottom: 0,\n    width: '100%',\n    backgroundColor: Colors.black,\n    //justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: '1rem',\n  },\n  footerText: {\n    color: Colors.white,\n  },\n  submitButton: {\n    marginTop: 20,\n  },\n  buttonIcon: {\n    marginRight: 10,\n  },\n});\nexport default Wrapper;\n","/* eslint-disable no-useless-escape */\nimport {Platform} from 'react-native';\n\nexport function isMobileWebBrowser() {\n  let mobileBrowserDetected = false;\n  if (Platform.OS === 'web') {\n    (({userAgent} = navigator) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          userAgent,\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          userAgent.substr(0, 4),\n        )\n      )\n        mobileBrowserDetected = true;\n    })();\n  }\n  return mobileBrowserDetected;\n}\n","import {StatusBar} from 'expo-status-bar';\nimport React from 'react';\nimport {LogBox} from 'react-native';\nimport {SafeAreaProvider} from 'react-native-safe-area-context';\n\nimport {createTheme, ThemeProvider} from '@rneui/themed';\n\nimport {Colors, LightColors} from './src/app/constants';\nimport {DrawerNavigation} from './src/components/Navigation';\nimport RequireInternet from './src/components/RequireInternet';\nimport Wrapper from './src/components/Wrapper';\n\nconst theme = createTheme({\n  lightColors: LightColors,\n  mode: 'light',\n  components: {\n    Header: {\n      backgroundColor: Colors.headerBg,\n    },\n    Icon: {\n      color: Colors.black,\n      type: 'material-community',\n    },\n    Overlay: {\n      overlayStyle: {\n        backgroundColor: Colors.background,\n      },\n    },\n  },\n});\nconst App = () => {\n  LogBox.ignoreAllLogs();\n  return (\n    <>\n      <StatusBar\n        backgroundColor={Colors.headerBg}\n        translucent={false}\n      ></StatusBar>\n      <SafeAreaProvider>\n        <ThemeProvider theme={theme}>\n          <Wrapper>\n            <DrawerNavigation />\n            <RequireInternet />\n          </Wrapper>\n        </ThemeProvider>\n      </SafeAreaProvider>\n    </>\n  );\n};\nexport default App;\n","import {registerRootComponent} from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}